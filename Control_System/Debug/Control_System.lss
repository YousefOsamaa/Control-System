
Control_System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00001172  00001206  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001172  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800150  00800150  00001256  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001256  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019d5  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8c  00000000  00000000  00002e21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca7  00000000  00000000  000038ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000310  00000000  00000000  00004554  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000739  00000000  00000000  00004864  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c2e  00000000  00000000  00004f9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00005bcb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 0c 02 	jmp	0x418	; 0x418 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 e7       	ldi	r30, 0x72	; 114
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a0 35       	cpi	r26, 0x50	; 80
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a0 e5       	ldi	r26, 0x50	; 80
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ad 35       	cpi	r26, 0x5D	; 93
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <main>
      9e:	0c 94 b7 08 	jmp	0x116e	; 0x116e <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_reset>:
	_delay_ms(2);
}

void LCD_PutChar(unsigned char data)
{
	lcd_data(data);
      a6:	8f ef       	ldi	r24, 0xFF	; 255
      a8:	84 b9       	out	0x04, r24	; 4
      aa:	85 b9       	out	0x05, r24	; 5
      ac:	2f ef       	ldi	r18, 0xFF	; 255
      ae:	89 ef       	ldi	r24, 0xF9	; 249
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	21 50       	subi	r18, 0x01	; 1
      b4:	80 40       	sbci	r24, 0x00	; 0
      b6:	90 40       	sbci	r25, 0x00	; 0
      b8:	e1 f7       	brne	.-8      	; 0xb2 <lcd_reset+0xc>
      ba:	00 c0       	rjmp	.+0      	; 0xbc <lcd_reset+0x16>
      bc:	00 00       	nop
      be:	93 e2       	ldi	r25, 0x23	; 35
      c0:	95 b9       	out	0x05, r25	; 5
      c2:	83 e0       	ldi	r24, 0x03	; 3
      c4:	85 b9       	out	0x05, r24	; 5
      c6:	ef e3       	ldi	r30, 0x3F	; 63
      c8:	fc e9       	ldi	r31, 0x9C	; 156
      ca:	31 97       	sbiw	r30, 0x01	; 1
      cc:	f1 f7       	brne	.-4      	; 0xca <lcd_reset+0x24>
      ce:	00 c0       	rjmp	.+0      	; 0xd0 <lcd_reset+0x2a>
      d0:	00 00       	nop
      d2:	95 b9       	out	0x05, r25	; 5
      d4:	85 b9       	out	0x05, r24	; 5
      d6:	ef e9       	ldi	r30, 0x9F	; 159
      d8:	ff e0       	ldi	r31, 0x0F	; 15
      da:	31 97       	sbiw	r30, 0x01	; 1
      dc:	f1 f7       	brne	.-4      	; 0xda <lcd_reset+0x34>
      de:	00 c0       	rjmp	.+0      	; 0xe0 <lcd_reset+0x3a>
      e0:	00 00       	nop
      e2:	95 b9       	out	0x05, r25	; 5
      e4:	85 b9       	out	0x05, r24	; 5
      e6:	8f e9       	ldi	r24, 0x9F	; 159
      e8:	9f e0       	ldi	r25, 0x0F	; 15
      ea:	01 97       	sbiw	r24, 0x01	; 1
      ec:	f1 f7       	brne	.-4      	; 0xea <lcd_reset+0x44>
      ee:	00 c0       	rjmp	.+0      	; 0xf0 <lcd_reset+0x4a>
      f0:	00 00       	nop
      f2:	82 e2       	ldi	r24, 0x22	; 34
      f4:	85 b9       	out	0x05, r24	; 5
      f6:	82 e0       	ldi	r24, 0x02	; 2
      f8:	85 b9       	out	0x05, r24	; 5
      fa:	ef e9       	ldi	r30, 0x9F	; 159
      fc:	ff e0       	ldi	r31, 0x0F	; 15
      fe:	31 97       	sbiw	r30, 0x01	; 1
     100:	f1 f7       	brne	.-4      	; 0xfe <lcd_reset+0x58>
     102:	00 c0       	rjmp	.+0      	; 0x104 <lcd_reset+0x5e>
     104:	00 00       	nop
     106:	08 95       	ret

00000108 <lcd_cmd>:
     108:	98 2f       	mov	r25, r24
     10a:	92 95       	swap	r25
     10c:	9f 70       	andi	r25, 0x0F	; 15
     10e:	29 2f       	mov	r18, r25
     110:	20 62       	ori	r18, 0x20	; 32
     112:	25 b9       	out	0x05, r18	; 5
     114:	95 b9       	out	0x05, r25	; 5
     116:	8f 70       	andi	r24, 0x0F	; 15
     118:	98 2f       	mov	r25, r24
     11a:	90 62       	ori	r25, 0x20	; 32
     11c:	95 b9       	out	0x05, r25	; 5
     11e:	85 b9       	out	0x05, r24	; 5
     120:	8f e1       	ldi	r24, 0x1F	; 31
     122:	93 e0       	ldi	r25, 0x03	; 3
     124:	01 97       	sbiw	r24, 0x01	; 1
     126:	f1 f7       	brne	.-4      	; 0x124 <lcd_cmd+0x1c>
     128:	00 c0       	rjmp	.+0      	; 0x12a <lcd_cmd+0x22>
     12a:	00 00       	nop
     12c:	8f e1       	ldi	r24, 0x1F	; 31
     12e:	93 e0       	ldi	r25, 0x03	; 3
     130:	01 97       	sbiw	r24, 0x01	; 1
     132:	f1 f7       	brne	.-4      	; 0x130 <lcd_cmd+0x28>
     134:	00 c0       	rjmp	.+0      	; 0x136 <lcd_cmd+0x2e>
     136:	00 00       	nop
     138:	08 95       	ret

0000013a <LCD_Init>:
     13a:	80 e1       	ldi	r24, 0x10	; 16
     13c:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <columnCount>
     140:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <lastPOSx>
     144:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_reset>
     148:	88 e2       	ldi	r24, 0x28	; 40
     14a:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     14e:	8c e0       	ldi	r24, 0x0C	; 12
     150:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     154:	86 e0       	ldi	r24, 0x06	; 6
     156:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     15a:	80 e8       	ldi	r24, 0x80	; 128
     15c:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     160:	08 95       	ret

00000162 <lcd_data>:
     162:	98 2f       	mov	r25, r24
     164:	92 95       	swap	r25
     166:	9f 70       	andi	r25, 0x0F	; 15
     168:	29 2f       	mov	r18, r25
     16a:	20 63       	ori	r18, 0x30	; 48
     16c:	25 b9       	out	0x05, r18	; 5
     16e:	90 61       	ori	r25, 0x10	; 16
     170:	95 b9       	out	0x05, r25	; 5
     172:	8f 70       	andi	r24, 0x0F	; 15
     174:	98 2f       	mov	r25, r24
     176:	90 63       	ori	r25, 0x30	; 48
     178:	95 b9       	out	0x05, r25	; 5
     17a:	80 61       	ori	r24, 0x10	; 16
     17c:	85 b9       	out	0x05, r24	; 5
     17e:	8f e1       	ldi	r24, 0x1F	; 31
     180:	93 e0       	ldi	r25, 0x03	; 3
     182:	01 97       	sbiw	r24, 0x01	; 1
     184:	f1 f7       	brne	.-4      	; 0x182 <lcd_data+0x20>
     186:	00 c0       	rjmp	.+0      	; 0x188 <lcd_data+0x26>
     188:	00 00       	nop
     18a:	8f e1       	ldi	r24, 0x1F	; 31
     18c:	93 e0       	ldi	r25, 0x03	; 3
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	f1 f7       	brne	.-4      	; 0x18e <lcd_data+0x2c>
     192:	00 c0       	rjmp	.+0      	; 0x194 <lcd_data+0x32>
     194:	00 00       	nop
     196:	08 95       	ret

00000198 <LCD_GoToXY>:
     198:	81 11       	cpse	r24, r1
     19a:	05 c0       	rjmp	.+10     	; 0x1a6 <LCD_GoToXY+0xe>
     19c:	80 e8       	ldi	r24, 0x80	; 128
     19e:	86 0f       	add	r24, r22
     1a0:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     1a4:	07 c0       	rjmp	.+14     	; 0x1b4 <LCD_GoToXY+0x1c>
     1a6:	80 ec       	ldi	r24, 0xC0	; 192
     1a8:	86 0f       	add	r24, r22
     1aa:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     1ae:	81 e0       	ldi	r24, 0x01	; 1
     1b0:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <lastPOSx>
     1b4:	85 ed       	ldi	r24, 0xD5	; 213
     1b6:	8a 95       	dec	r24
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_GoToXY+0x1e>
     1ba:	00 00       	nop
     1bc:	08 95       	ret

000001be <LCD_Clear>:
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     1c4:	8f e3       	ldi	r24, 0x3F	; 63
     1c6:	9f e1       	ldi	r25, 0x1F	; 31
     1c8:	01 97       	sbiw	r24, 0x01	; 1
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <LCD_Clear+0xa>
     1cc:	00 c0       	rjmp	.+0      	; 0x1ce <LCD_Clear+0x10>
     1ce:	00 00       	nop
     1d0:	82 e0       	ldi	r24, 0x02	; 2
     1d2:	0e 94 84 00 	call	0x108	; 0x108 <lcd_cmd>
     1d6:	8f e3       	ldi	r24, 0x3F	; 63
     1d8:	9f e1       	ldi	r25, 0x1F	; 31
     1da:	01 97       	sbiw	r24, 0x01	; 1
     1dc:	f1 f7       	brne	.-4      	; 0x1da <LCD_Clear+0x1c>
     1de:	00 c0       	rjmp	.+0      	; 0x1e0 <LCD_Clear+0x22>
     1e0:	00 00       	nop
     1e2:	08 95       	ret

000001e4 <LCD_PutStr>:
}

void LCD_PutStr( char *str)
{
     1e4:	0f 93       	push	r16
     1e6:	1f 93       	push	r17
     1e8:	cf 93       	push	r28
     1ea:	8c 01       	movw	r16, r24
	unsigned char i=0;
     1ec:	c0 e0       	ldi	r28, 0x00	; 0
	
	while(*(str+i)!='\0'&&i<columnCount)
     1ee:	03 c0       	rjmp	.+6      	; 0x1f6 <LCD_PutStr+0x12>
	{
	lcd_data(str[i]);
     1f0:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_data>
	i++;	
     1f4:	cf 5f       	subi	r28, 0xFF	; 255

void LCD_PutStr( char *str)
{
	unsigned char i=0;
	
	while(*(str+i)!='\0'&&i<columnCount)
     1f6:	f8 01       	movw	r30, r16
     1f8:	ec 0f       	add	r30, r28
     1fa:	f1 1d       	adc	r31, r1
     1fc:	80 81       	ld	r24, Z
     1fe:	88 23       	and	r24, r24
     200:	21 f0       	breq	.+8      	; 0x20a <LCD_PutStr+0x26>
     202:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <columnCount>
     206:	c9 17       	cp	r28, r25
     208:	98 f3       	brcs	.-26     	; 0x1f0 <LCD_PutStr+0xc>
	{
	lcd_data(str[i]);
	i++;	
	}
	if (i>columnCount-1&&lastPOSx==0)
     20a:	8c 2f       	mov	r24, r28
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	c0 91 55 01 	lds	r28, 0x0155	; 0x800155 <columnCount>
     212:	2c 2f       	mov	r18, r28
     214:	30 e0       	ldi	r19, 0x00	; 0
     216:	21 50       	subi	r18, 0x01	; 1
     218:	31 09       	sbc	r19, r1
     21a:	28 17       	cp	r18, r24
     21c:	39 07       	cpc	r19, r25
     21e:	94 f4       	brge	.+36     	; 0x244 <LCD_PutStr+0x60>
     220:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <lastPOSx>
     224:	81 11       	cpse	r24, r1
     226:	0e c0       	rjmp	.+28     	; 0x244 <LCD_PutStr+0x60>
	{
		i=columnCount;
		LCD_GoToXY(1,0);
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_GoToXY>
	
	while(*(str+i)!='\0')
     230:	03 c0       	rjmp	.+6      	; 0x238 <LCD_PutStr+0x54>
	{
	lcd_data(str[i]);
     232:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_data>
	i++;	
     236:	cf 5f       	subi	r28, 0xFF	; 255
	if (i>columnCount-1&&lastPOSx==0)
	{
		i=columnCount;
		LCD_GoToXY(1,0);
	
	while(*(str+i)!='\0')
     238:	f8 01       	movw	r30, r16
     23a:	ec 0f       	add	r30, r28
     23c:	f1 1d       	adc	r31, r1
     23e:	80 81       	ld	r24, Z
     240:	81 11       	cpse	r24, r1
     242:	f7 cf       	rjmp	.-18     	; 0x232 <LCD_PutStr+0x4e>
	lcd_data(str[i]);
	i++;	
	}
	}
	
}
     244:	cf 91       	pop	r28
     246:	1f 91       	pop	r17
     248:	0f 91       	pop	r16
     24a:	08 95       	ret

0000024c <debounce>:
	return;
}
void calculate_PID()
{
	 int errorValue = motorPosition - Target; //Current position - target position (or setpoint)
	 controlSignal = proportional * errorValue;
     24c:	99 b1       	in	r25, 0x09	; 9
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	29 2f       	mov	r18, r25
     252:	28 70       	andi	r18, 0x08	; 8
     254:	93 fd       	sbrc	r25, 3
     256:	80 e0       	ldi	r24, 0x00	; 0
     258:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <button_state.2005>
     25c:	89 17       	cp	r24, r25
     25e:	89 f0       	breq	.+34     	; 0x282 <debounce+0x36>
     260:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <__data_end>
     264:	9f 5f       	subi	r25, 0xFF	; 255
     266:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <__data_end>
     26a:	94 30       	cpi	r25, 0x04	; 4
     26c:	60 f0       	brcs	.+24     	; 0x286 <debounce+0x3a>
     26e:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <button_state.2005>
     272:	21 11       	cpse	r18, r1
     274:	03 c0       	rjmp	.+6      	; 0x27c <debounce+0x30>
     276:	81 e0       	ldi	r24, 0x01	; 1
     278:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <button_down>
     27c:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <__data_end>
     280:	08 95       	ret
     282:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <__data_end>
     286:	08 95       	ret

00000288 <ADC_init>:
     288:	ea e7       	ldi	r30, 0x7A	; 122
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	80 81       	ld	r24, Z
     28e:	87 60       	ori	r24, 0x07	; 7
     290:	80 83       	st	Z, r24
     292:	ac e7       	ldi	r26, 0x7C	; 124
     294:	b0 e0       	ldi	r27, 0x00	; 0
     296:	8c 91       	ld	r24, X
     298:	80 64       	ori	r24, 0x40	; 64
     29a:	8c 93       	st	X, r24
     29c:	8c 91       	ld	r24, X
     29e:	8c 93       	st	X, r24
     2a0:	80 81       	ld	r24, Z
     2a2:	80 68       	ori	r24, 0x80	; 128
     2a4:	80 83       	st	Z, r24
     2a6:	08 95       	ret

000002a8 <ADC_startConversion>:
     2a8:	cf 93       	push	r28
     2aa:	df 93       	push	r29
     2ac:	ec 01       	movw	r28, r24
     2ae:	ea e7       	ldi	r30, 0x7A	; 122
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	80 81       	ld	r24, Z
     2b4:	80 61       	ori	r24, 0x10	; 16
     2b6:	80 83       	st	Z, r24
     2b8:	80 81       	ld	r24, Z
     2ba:	80 64       	ori	r24, 0x40	; 64
     2bc:	80 83       	st	Z, r24
     2be:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     2c2:	84 ff       	sbrs	r24, 4
     2c4:	fc cf       	rjmp	.-8      	; 0x2be <ADC_startConversion+0x16>
     2c6:	ea e7       	ldi	r30, 0x7A	; 122
     2c8:	f0 e0       	ldi	r31, 0x00	; 0
     2ca:	80 81       	ld	r24, Z
     2cc:	80 61       	ori	r24, 0x10	; 16
     2ce:	80 83       	st	Z, r24
     2d0:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     2d4:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 aa 04 	call	0x954	; 0x954 <__floatunsisf>
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e4       	ldi	r19, 0x40	; 64
     2e4:	4c e9       	ldi	r20, 0x9C	; 156
     2e6:	50 e4       	ldi	r21, 0x40	; 64
     2e8:	0e 94 38 05 	call	0xa70	; 0xa70 <__mulsf3>
     2ec:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__fixunssfsi>
     2f0:	79 83       	std	Y+1, r23	; 0x01
     2f2:	68 83       	st	Y, r22
     2f4:	df 91       	pop	r29
     2f6:	cf 91       	pop	r28
     2f8:	08 95       	ret

000002fa <Timer_init>:
     2fa:	8a b1       	in	r24, 0x0a	; 10
     2fc:	80 64       	ori	r24, 0x40	; 64
     2fe:	8a b9       	out	0x0a, r24	; 10
     300:	84 b5       	in	r24, 0x24	; 36
     302:	81 68       	ori	r24, 0x81	; 129
     304:	84 bd       	out	0x24, r24	; 36
     306:	85 b5       	in	r24, 0x25	; 37
     308:	85 60       	ori	r24, 0x05	; 5
     30a:	85 bd       	out	0x25, r24	; 37
     30c:	8d e4       	ldi	r24, 0x4D	; 77
     30e:	87 bd       	out	0x27, r24	; 39
     310:	08 95       	ret

00000312 <Generate_PWM_Signal>:
     312:	2f ef       	ldi	r18, 0xFF	; 255
     314:	82 9f       	mul	r24, r18
     316:	c0 01       	movw	r24, r0
     318:	11 24       	eor	r1, r1
     31a:	64 e6       	ldi	r22, 0x64	; 100
     31c:	70 e0       	ldi	r23, 0x00	; 0
     31e:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__divmodhi4>
     322:	67 bd       	out	0x27, r22	; 39
     324:	08 95       	ret

00000326 <SREG_EnableGIE>:
     326:	8f b7       	in	r24, 0x3f	; 63
     328:	80 68       	ori	r24, 0x80	; 128
     32a:	8f bf       	out	0x3f, r24	; 63
     32c:	08 95       	ret

0000032e <H_Bridge_init>:
     32e:	42 e0       	ldi	r20, 0x02	; 2
     330:	61 e0       	ldi	r22, 0x01	; 1
     332:	82 e0       	ldi	r24, 0x02	; 2
     334:	0e 94 96 03 	call	0x72c	; 0x72c <mdio_setPinStatus>
     338:	42 e0       	ldi	r20, 0x02	; 2
     33a:	62 e0       	ldi	r22, 0x02	; 2
     33c:	82 e0       	ldi	r24, 0x02	; 2
     33e:	0e 94 96 03 	call	0x72c	; 0x72c <mdio_setPinStatus>
     342:	82 e0       	ldi	r24, 0x02	; 2
     344:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <Dir_Status>
     348:	08 95       	ret

0000034a <H_Bridge_SetMode>:
     34a:	81 30       	cpi	r24, 0x01	; 1
     34c:	89 f0       	breq	.+34     	; 0x370 <H_Bridge_SetMode+0x26>
     34e:	18 f0       	brcs	.+6      	; 0x356 <H_Bridge_SetMode+0xc>
     350:	82 30       	cpi	r24, 0x02	; 2
     352:	e1 f0       	breq	.+56     	; 0x38c <H_Bridge_SetMode+0x42>
     354:	08 95       	ret
     356:	41 e0       	ldi	r20, 0x01	; 1
     358:	61 e0       	ldi	r22, 0x01	; 1
     35a:	82 e0       	ldi	r24, 0x02	; 2
     35c:	0e 94 cf 03 	call	0x79e	; 0x79e <mdio_setPinValue>
     360:	40 e0       	ldi	r20, 0x00	; 0
     362:	62 e0       	ldi	r22, 0x02	; 2
     364:	82 e0       	ldi	r24, 0x02	; 2
     366:	0e 94 cf 03 	call	0x79e	; 0x79e <mdio_setPinValue>
     36a:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <Dir_Status>
     36e:	08 95       	ret
     370:	40 e0       	ldi	r20, 0x00	; 0
     372:	61 e0       	ldi	r22, 0x01	; 1
     374:	82 e0       	ldi	r24, 0x02	; 2
     376:	0e 94 cf 03 	call	0x79e	; 0x79e <mdio_setPinValue>
     37a:	41 e0       	ldi	r20, 0x01	; 1
     37c:	62 e0       	ldi	r22, 0x02	; 2
     37e:	82 e0       	ldi	r24, 0x02	; 2
     380:	0e 94 cf 03 	call	0x79e	; 0x79e <mdio_setPinValue>
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <Dir_Status>
     38a:	08 95       	ret
     38c:	40 e0       	ldi	r20, 0x00	; 0
     38e:	61 e0       	ldi	r22, 0x01	; 1
     390:	82 e0       	ldi	r24, 0x02	; 2
     392:	0e 94 cf 03 	call	0x79e	; 0x79e <mdio_setPinValue>
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	62 e0       	ldi	r22, 0x02	; 2
     39a:	82 e0       	ldi	r24, 0x02	; 2
     39c:	0e 94 cf 03 	call	0x79e	; 0x79e <mdio_setPinValue>
     3a0:	82 e0       	ldi	r24, 0x02	; 2
     3a2:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <Dir_Status>
     3a6:	08 95       	ret

000003a8 <Toggle_Direction>:
     3a8:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <Dir_Status>
     3ac:	81 11       	cpse	r24, r1
     3ae:	04 c0       	rjmp	.+8      	; 0x3b8 <Toggle_Direction+0x10>
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
     3b6:	08 95       	ret
     3b8:	81 30       	cpi	r24, 0x01	; 1
     3ba:	21 f4       	brne	.+8      	; 0x3c4 <Toggle_Direction+0x1c>
     3bc:	80 e0       	ldi	r24, 0x00	; 0
     3be:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
     3c2:	08 95       	ret
     3c4:	82 e0       	ldi	r24, 0x02	; 2
     3c6:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <Dir_Status>
     3ca:	08 95       	ret

000003cc <ret_Encoder_Value>:
     3cc:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <motorPosition>
     3d0:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <motorPosition+0x1>
     3d4:	08 95       	ret

000003d6 <setTarget>:
     3d6:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <Target>
     3da:	08 95       	ret

000003dc <start_Motor>:
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	1f 92       	push	r1
     3e2:	cd b7       	in	r28, 0x3d	; 61
     3e4:	de b7       	in	r29, 0x3e	; 62
     3e6:	80 e0       	ldi	r24, 0x00	; 0
     3e8:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
     3ec:	07 c0       	rjmp	.+14     	; 0x3fc <start_Motor+0x20>
     3ee:	ae 01       	movw	r20, r28
     3f0:	4f 5f       	subi	r20, 0xFF	; 255
     3f2:	5f 4f       	sbci	r21, 0xFF	; 255
     3f4:	60 e1       	ldi	r22, 0x10	; 16
     3f6:	82 e0       	ldi	r24, 0x02	; 2
     3f8:	0e 94 ef 03 	call	0x7de	; 0x7de <mdio_getPinValue>
     3fc:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <motorPosition>
     400:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <motorPosition+0x1>
     404:	18 16       	cp	r1, r24
     406:	19 06       	cpc	r1, r25
     408:	94 f7       	brge	.-28     	; 0x3ee <start_Motor+0x12>
     40a:	82 e0       	ldi	r24, 0x02	; 2
     40c:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
     410:	0f 90       	pop	r0
     412:	df 91       	pop	r29
     414:	cf 91       	pop	r28
     416:	08 95       	ret

00000418 <__vector_1>:
/***************************************************************************************************/
/*													ISR                                   */
/***************************************************************************************************/

ISR (INT0_vect)
{
     418:	1f 92       	push	r1
     41a:	0f 92       	push	r0
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	0f 92       	push	r0
     420:	11 24       	eor	r1, r1
     422:	2f 93       	push	r18
     424:	3f 93       	push	r19
     426:	4f 93       	push	r20
     428:	5f 93       	push	r21
     42a:	6f 93       	push	r22
     42c:	7f 93       	push	r23
     42e:	8f 93       	push	r24
     430:	9f 93       	push	r25
     432:	af 93       	push	r26
     434:	bf 93       	push	r27
     436:	ef 93       	push	r30
     438:	ff 93       	push	r31
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	1f 92       	push	r1
     440:	cd b7       	in	r28, 0x3d	; 61
     442:	de b7       	in	r29, 0x3e	; 62
	u8_t temp;
	//We need to read the other pin of the encoder which will be either 1 or 0 depending on the direction
	mdio_getPinValue(ENC_PORT,A_Phase,&temp);
     444:	ae 01       	movw	r20, r28
     446:	4f 5f       	subi	r20, 0xFF	; 255
     448:	5f 4f       	sbci	r21, 0xFF	; 255
     44a:	60 e1       	ldi	r22, 0x10	; 16
     44c:	82 e0       	ldi	r24, 0x02	; 2
     44e:	0e 94 ef 03 	call	0x7de	; 0x7de <mdio_getPinValue>

	if (temp == 1) //CW direction
     452:	89 81       	ldd	r24, Y+1	; 0x01
     454:	81 30       	cpi	r24, 0x01	; 1
     456:	51 f4       	brne	.+20     	; 0x46c <__vector_1+0x54>
	{
		motorPosition++;
     458:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <motorPosition>
     45c:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <motorPosition+0x1>
     460:	01 96       	adiw	r24, 0x01	; 1
     462:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <motorPosition+0x1>
     466:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <motorPosition>
     46a:	09 c0       	rjmp	.+18     	; 0x47e <__vector_1+0x66>
	}
	else //else, it is zero... -> CCW direction
	{
		motorPosition--;
     46c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <motorPosition>
     470:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <motorPosition+0x1>
     474:	01 97       	sbiw	r24, 0x01	; 1
     476:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <motorPosition+0x1>
     47a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <motorPosition>
	}


}
     47e:	0f 90       	pop	r0
     480:	df 91       	pop	r29
     482:	cf 91       	pop	r28
     484:	ff 91       	pop	r31
     486:	ef 91       	pop	r30
     488:	bf 91       	pop	r27
     48a:	af 91       	pop	r26
     48c:	9f 91       	pop	r25
     48e:	8f 91       	pop	r24
     490:	7f 91       	pop	r23
     492:	6f 91       	pop	r22
     494:	5f 91       	pop	r21
     496:	4f 91       	pop	r20
     498:	3f 91       	pop	r19
     49a:	2f 91       	pop	r18
     49c:	0f 90       	pop	r0
     49e:	0f be       	out	0x3f, r0	; 63
     4a0:	0f 90       	pop	r0
     4a2:	1f 90       	pop	r1
     4a4:	18 95       	reti

000004a6 <EXTI_Init>:


void EXTI_Init()
{
    /*Initiazlizing INT0 */
    EICRA |= (3 <<  0); //CHoosing Sense Level as rising
     4a6:	e9 e6       	ldi	r30, 0x69	; 105
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	80 81       	ld	r24, Z
     4ac:	83 60       	ori	r24, 0x03	; 3
     4ae:	80 83       	st	Z, r24
    EIMSK |= (1 << 0); //Enabling INT1 (PIE)
     4b0:	8d b3       	in	r24, 0x1d	; 29
     4b2:	81 60       	ori	r24, 0x01	; 1
     4b4:	8d bb       	out	0x1d, r24	; 29
     4b6:	08 95       	ret

000004b8 <main>:
/***************************************************************************************************/
/*                                               Main                                             */
/***************************************************************************************************/

int main(void)
{
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	cd b7       	in	r28, 0x3d	; 61
     4be:	de b7       	in	r29, 0x3e	; 62
     4c0:	64 97       	sbiw	r28, 0x14	; 20
     4c2:	0f b6       	in	r0, 0x3f	; 63
     4c4:	f8 94       	cli
     4c6:	de bf       	out	0x3e, r29	; 62
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	cd bf       	out	0x3d, r28	; 61
	
	/*INITIALZINNG PROGRAM FUNCTIONS*/
	u8_t mode=SELECT_MODE;
	mdio_setPinStatus(PORTC,PIN1,INPUT_PULL_DOWN);
     4cc:	40 e0       	ldi	r20, 0x00	; 0
     4ce:	62 e0       	ldi	r22, 0x02	; 2
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	0e 94 96 03 	call	0x72c	; 0x72c <mdio_setPinStatus>
	mdio_setPinStatus(PORTC,PIN2,INPUT_PULL_DOWN);
     4d6:	40 e0       	ldi	r20, 0x00	; 0
     4d8:	64 e0       	ldi	r22, 0x04	; 4
     4da:	81 e0       	ldi	r24, 0x01	; 1
     4dc:	0e 94 96 03 	call	0x72c	; 0x72c <mdio_setPinStatus>
    u16_t Text[10];
	char Text_Position[3];
	ADC_init();
     4e0:	0e 94 44 01 	call	0x288	; 0x288 <ADC_init>
	H_Bridge_init();
     4e4:	0e 94 97 01 	call	0x32e	; 0x32e <H_Bridge_init>
	H_Bridge_SetMode(OFF);
     4e8:	82 e0       	ldi	r24, 0x02	; 2
     4ea:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
	mdio_setPinStatus(PORTD,PIN2,INPUT_PULL_DOWN);
     4ee:	40 e0       	ldi	r20, 0x00	; 0
     4f0:	64 e0       	ldi	r22, 0x04	; 4
     4f2:	82 e0       	ldi	r24, 0x02	; 2
     4f4:	0e 94 96 03 	call	0x72c	; 0x72c <mdio_setPinStatus>
	mdio_setPinStatus(PORTD,PIN3,INPUT_PULLUP);
     4f8:	41 e0       	ldi	r20, 0x01	; 1
     4fa:	68 e0       	ldi	r22, 0x08	; 8
     4fc:	82 e0       	ldi	r24, 0x02	; 2
     4fe:	0e 94 96 03 	call	0x72c	; 0x72c <mdio_setPinStatus>
	Timer_init();
     502:	0e 94 7d 01 	call	0x2fa	; 0x2fa <Timer_init>
    LCD_Init();
     506:	0e 94 9d 00 	call	0x13a	; 0x13a <LCD_Init>
	int rpm;
	EXTI_Init();
     50a:	0e 94 53 02 	call	0x4a6	; 0x4a6 <EXTI_Init>
	// Enabling Interrupts
	SREG_EnableGIE();
     50e:	0e 94 93 01 	call	0x326	; 0x326 <SREG_EnableGIE>

int main(void)
{
	
	/*INITIALZINNG PROGRAM FUNCTIONS*/
	u8_t mode=SELECT_MODE;
     512:	10 e0       	ldi	r17, 0x00	; 0
	
	/*ENETRING SUPERLOOP*/
    while (1)
    {
		/*USER INPUT FOR SYSTEM MODE*/
		if(mode==SELECT_MODE)
     514:	11 23       	and	r17, r17
     516:	09 f4       	brne	.+2      	; 0x51a <main+0x62>
     518:	44 c0       	rjmp	.+136    	; 0x5a2 <main+0xea>
     51a:	4b c0       	rjmp	.+150    	; 0x5b2 <main+0xfa>
			mode=SPEED_MODE;
			
			/*STUCK IN LOOP UNTIL USER CONFIRM*/
			while(!(PINC & 1<<2))
			{
				LCD_GoToXY(0,0);
     51c:	60 e0       	ldi	r22, 0x00	; 0
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_GoToXY>
				LCD_PutStr("WELCOME :)");
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
				LCD_GoToXY(1,0);
     52c:	60 e0       	ldi	r22, 0x00	; 0
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_GoToXY>
				LCD_PutStr("SELECT:");
     534:	8b e0       	ldi	r24, 0x0B	; 11
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
				
				/*CHECKING IF SPEED MODE*/
				if(mode==SPEED_MODE)
     53c:	11 30       	cpi	r17, 0x01	; 1
     53e:	b1 f4       	brne	.+44     	; 0x56c <main+0xb4>
				{
					
					/*TOGGLING TO POSITION MODE IF BUTTON PRESSED*/
					if(PINC & 1<<1)
     540:	31 9b       	sbis	0x06, 1	; 6
     542:	0f c0       	rjmp	.+30     	; 0x562 <main+0xaa>
					{
						mode=POSITION_MODE;
						LCD_PutStr("Position");
     544:	83 e1       	ldi	r24, 0x13	; 19
     546:	91 e0       	ldi	r25, 0x01	; 1
     548:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     54c:	2f ef       	ldi	r18, 0xFF	; 255
     54e:	80 e7       	ldi	r24, 0x70	; 112
     550:	92 e0       	ldi	r25, 0x02	; 2
     552:	21 50       	subi	r18, 0x01	; 1
     554:	80 40       	sbci	r24, 0x00	; 0
     556:	90 40       	sbci	r25, 0x00	; 0
     558:	e1 f7       	brne	.-8      	; 0x552 <main+0x9a>
     55a:	00 c0       	rjmp	.+0      	; 0x55c <main+0xa4>
     55c:	00 00       	nop
				{
					
					/*TOGGLING TO POSITION MODE IF BUTTON PRESSED*/
					if(PINC & 1<<1)
					{
						mode=POSITION_MODE;
     55e:	12 e0       	ldi	r17, 0x02	; 2
     560:	21 c0       	rjmp	.+66     	; 0x5a4 <main+0xec>
					
					/*ELSE STAY SPEED CONTROL*/
					else
					{
						mode=SPEED_MODE;
						LCD_PutStr("Speed");
     562:	8c e1       	ldi	r24, 0x1C	; 28
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
     56a:	1c c0       	rjmp	.+56     	; 0x5a4 <main+0xec>
				
				/*IF NOT SPEED MODE,POSITION CONTROL MODE*/
				else
				{
					/*TOGGLING TO SPEED MODE IF BUTTON PRESSED*/
					if(PINC & 1<<1)
     56c:	31 9b       	sbis	0x06, 1	; 6
     56e:	13 c0       	rjmp	.+38     	; 0x596 <main+0xde>
					{
						mode=SPEED_MODE;
						LCD_PutStr("Speed");
     570:	8c e1       	ldi	r24, 0x1C	; 28
     572:	91 e0       	ldi	r25, 0x01	; 1
     574:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
						LCD_PutStr("   ");
     578:	82 e2       	ldi	r24, 0x22	; 34
     57a:	91 e0       	ldi	r25, 0x01	; 1
     57c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
     580:	2f ef       	ldi	r18, 0xFF	; 255
     582:	80 e7       	ldi	r24, 0x70	; 112
     584:	92 e0       	ldi	r25, 0x02	; 2
     586:	21 50       	subi	r18, 0x01	; 1
     588:	80 40       	sbci	r24, 0x00	; 0
     58a:	90 40       	sbci	r25, 0x00	; 0
     58c:	e1 f7       	brne	.-8      	; 0x586 <main+0xce>
     58e:	00 c0       	rjmp	.+0      	; 0x590 <main+0xd8>
     590:	00 00       	nop
				else
				{
					/*TOGGLING TO SPEED MODE IF BUTTON PRESSED*/
					if(PINC & 1<<1)
					{
						mode=SPEED_MODE;
     592:	11 e0       	ldi	r17, 0x01	; 1
     594:	07 c0       	rjmp	.+14     	; 0x5a4 <main+0xec>
					}
					/*ELSE STAY POSITION CONTROL*/
					else
					{
						mode=POSITION_MODE;
						LCD_PutStr("Position");
     596:	83 e1       	ldi	r24, 0x13	; 19
     598:	91 e0       	ldi	r25, 0x01	; 1
     59a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
						_delay_ms(50);
					}
					/*ELSE STAY POSITION CONTROL*/
					else
					{
						mode=POSITION_MODE;
     59e:	12 e0       	ldi	r17, 0x02	; 2
     5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <main+0xec>
     5a2:	11 e0       	ldi	r17, 0x01	; 1
		if(mode==SELECT_MODE)
		{
			mode=SPEED_MODE;
			
			/*STUCK IN LOOP UNTIL USER CONFIRM*/
			while(!(PINC & 1<<2))
     5a4:	32 9b       	sbis	0x06, 2	; 6
     5a6:	ba cf       	rjmp	.-140    	; 0x51c <main+0x64>
				}
				
				
			}
			/*CLEARING WELCOME SCREEN AND INITIALZING MOTOR*/
			H_Bridge_SetMode(CW);
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
			LCD_Clear();
     5ae:	0e 94 df 00 	call	0x1be	; 0x1be <LCD_Clear>
		}
		
		/*CHECKING IF MODE= SPEED CONTROL*/
		if(mode==SPEED_MODE)
     5b2:	11 30       	cpi	r17, 0x01	; 1
     5b4:	09 f0       	breq	.+2      	; 0x5b8 <main+0x100>
     5b6:	55 c0       	rjmp	.+170    	; 0x662 <main+0x1aa>
		{
			/*CHECKING IF USER WANTS TO GET BACK TO SELECT MODE*/
			if(PINC & 1<<1)
     5b8:	31 9b       	sbis	0x06, 1	; 6
     5ba:	05 c0       	rjmp	.+10     	; 0x5c6 <main+0x10e>
			{
				mode=SELECT_MODE;
				H_Bridge_SetMode(OFF);
     5bc:	82 e0       	ldi	r24, 0x02	; 2
     5be:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
		if(mode==SPEED_MODE)
		{
			/*CHECKING IF USER WANTS TO GET BACK TO SELECT MODE*/
			if(PINC & 1<<1)
			{
				mode=SELECT_MODE;
     5c2:	10 e0       	ldi	r17, 0x00	; 0
     5c4:	a7 cf       	rjmp	.-178    	; 0x514 <main+0x5c>
				H_Bridge_SetMode(OFF);
			}
			else
			{
				/*ENTERED SPEED MODE*/
				debounce();
     5c6:	0e 94 26 01 	call	0x24c	; 0x24c <debounce>
				if(button_down)
     5ca:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <button_down>
     5ce:	88 23       	and	r24, r24
     5d0:	21 f0       	breq	.+8      	; 0x5da <main+0x122>
				{
				Toggle_Direction();
     5d2:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <Toggle_Direction>
				button_down=0;
     5d6:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <button_down>
				}
				ADC_startConversion(&MotorSpeed ,ADC_CHANNEL_0);
     5da:	60 e0       	ldi	r22, 0x00	; 0
     5dc:	87 e5       	ldi	r24, 0x57	; 87
     5de:	91 e0       	ldi	r25, 0x01	; 1
     5e0:	0e 94 54 01 	call	0x2a8	; 0x2a8 <ADC_startConversion>
				sprintf(Text,"%d",MotorSpeed);
     5e4:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <MotorSpeed+0x1>
     5e8:	8f 93       	push	r24
     5ea:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <MotorSpeed>
     5ee:	8f 93       	push	r24
     5f0:	0f 2e       	mov	r0, r31
     5f2:	f6 e2       	ldi	r31, 0x26	; 38
     5f4:	ef 2e       	mov	r14, r31
     5f6:	f1 e0       	ldi	r31, 0x01	; 1
     5f8:	ff 2e       	mov	r15, r31
     5fa:	f0 2d       	mov	r31, r0
     5fc:	ff 92       	push	r15
     5fe:	ef 92       	push	r14
     600:	ce 01       	movw	r24, r28
     602:	01 96       	adiw	r24, 0x01	; 1
     604:	6c 01       	movw	r12, r24
     606:	9f 93       	push	r25
     608:	8f 93       	push	r24
     60a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <sprintf>
				
				Generate_PWM_Signal(MotorSpeed/50.0);
     60e:	60 91 57 01 	lds	r22, 0x0157	; 0x800157 <MotorSpeed>
     612:	70 91 58 01 	lds	r23, 0x0158	; 0x800158 <MotorSpeed+0x1>
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 aa 04 	call	0x954	; 0x954 <__floatunsisf>
     61e:	20 e0       	ldi	r18, 0x00	; 0
     620:	30 e0       	ldi	r19, 0x00	; 0
     622:	48 e4       	ldi	r20, 0x48	; 72
     624:	52 e4       	ldi	r21, 0x42	; 66
     626:	0e 94 02 04 	call	0x804	; 0x804 <__divsf3>
     62a:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__fixunssfsi>
     62e:	86 2f       	mov	r24, r22
     630:	0e 94 89 01 	call	0x312	; 0x312 <Generate_PWM_Signal>
				
				LCD_GoToXY(0,0);		
     634:	60 e0       	ldi	r22, 0x00	; 0
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_GoToXY>
				sprintf(Text,"%d",ret_Encoder_Value());
     63c:	0e 94 e6 01 	call	0x3cc	; 0x3cc <ret_Encoder_Value>
     640:	9f 93       	push	r25
     642:	8f 93       	push	r24
     644:	ff 92       	push	r15
     646:	ef 92       	push	r14
     648:	df 92       	push	r13
     64a:	cf 92       	push	r12
     64c:	0e 94 cd 05 	call	0xb9a	; 0xb9a <sprintf>
				LCD_PutStr(Text);
     650:	c6 01       	movw	r24, r12
     652:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
     656:	0f b6       	in	r0, 0x3f	; 63
     658:	f8 94       	cli
     65a:	de bf       	out	0x3e, r29	; 62
     65c:	0f be       	out	0x3f, r0	; 63
     65e:	cd bf       	out	0x3d, r28	; 61
     660:	59 cf       	rjmp	.-334    	; 0x514 <main+0x5c>
		
		/*CHECKING IF MODE= POSITION CONTROL MODE*/
		else
		{
			/*CHECKING IF USER WANTS TO RETURN TO MENU*/
			if(PINC & 1<<1)
     662:	31 9b       	sbis	0x06, 1	; 6
     664:	04 c0       	rjmp	.+8      	; 0x66e <main+0x1b6>
			{
				mode=SELECT_MODE;
				H_Bridge_SetMode(OFF);
     666:	82 e0       	ldi	r24, 0x02	; 2
     668:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
		else
		{
			/*CHECKING IF USER WANTS TO RETURN TO MENU*/
			if(PINC & 1<<1)
			{
				mode=SELECT_MODE;
     66c:	10 e0       	ldi	r17, 0x00	; 0
				H_Bridge_SetMode(OFF);
			}
			/*ENTERED POSITION CONTROL*/
			H_Bridge_SetMode(OFF);
     66e:	82 e0       	ldi	r24, 0x02	; 2
     670:	0e 94 a5 01 	call	0x34a	; 0x34a <H_Bridge_SetMode>
			ADC_startConversion(&Pos_Degrees ,ADC_CHANNEL_0);
     674:	60 e0       	ldi	r22, 0x00	; 0
     676:	8b e5       	ldi	r24, 0x5B	; 91
     678:	91 e0       	ldi	r25, 0x01	; 1
     67a:	0e 94 54 01 	call	0x2a8	; 0x2a8 <ADC_startConversion>
			Pos_Degrees = (Pos_Degrees*360.0)/5000.0;
     67e:	60 91 5b 01 	lds	r22, 0x015B	; 0x80015b <Pos_Degrees>
     682:	70 91 5c 01 	lds	r23, 0x015C	; 0x80015c <Pos_Degrees+0x1>
     686:	07 2e       	mov	r0, r23
     688:	00 0c       	add	r0, r0
     68a:	88 0b       	sbc	r24, r24
     68c:	99 0b       	sbc	r25, r25
     68e:	0e 94 ac 04 	call	0x958	; 0x958 <__floatsisf>
     692:	20 e0       	ldi	r18, 0x00	; 0
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	44 eb       	ldi	r20, 0xB4	; 180
     698:	53 e4       	ldi	r21, 0x43	; 67
     69a:	0e 94 38 05 	call	0xa70	; 0xa70 <__mulsf3>
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	30 e4       	ldi	r19, 0x40	; 64
     6a2:	4c e9       	ldi	r20, 0x9C	; 156
     6a4:	55 e4       	ldi	r21, 0x45	; 69
     6a6:	0e 94 02 04 	call	0x804	; 0x804 <__divsf3>
     6aa:	0e 94 74 04 	call	0x8e8	; 0x8e8 <__fixsfsi>
     6ae:	86 2f       	mov	r24, r22
     6b0:	60 93 5b 01 	sts	0x015B, r22	; 0x80015b <Pos_Degrees>
     6b4:	70 93 5c 01 	sts	0x015C, r23	; 0x80015c <Pos_Degrees+0x1>
			setTarget(Pos_Degrees);
     6b8:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <setTarget>
			LCD_GoToXY(0,0);
     6bc:	60 e0       	ldi	r22, 0x00	; 0
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_GoToXY>
			LCD_PutStr("Target:");
     6c4:	89 e2       	ldi	r24, 0x29	; 41
     6c6:	91 e0       	ldi	r25, 0x01	; 1
     6c8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
			sprintf(Text,"%d",Pos_Degrees);
     6cc:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <Pos_Degrees+0x1>
     6d0:	8f 93       	push	r24
     6d2:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <Pos_Degrees>
     6d6:	8f 93       	push	r24
     6d8:	86 e2       	ldi	r24, 0x26	; 38
     6da:	91 e0       	ldi	r25, 0x01	; 1
     6dc:	9f 93       	push	r25
     6de:	8f 93       	push	r24
     6e0:	ce 01       	movw	r24, r28
     6e2:	01 96       	adiw	r24, 0x01	; 1
     6e4:	7c 01       	movw	r14, r24
     6e6:	9f 93       	push	r25
     6e8:	8f 93       	push	r24
     6ea:	0e 94 cd 05 	call	0xb9a	; 0xb9a <sprintf>
			LCD_PutStr(Text);
     6ee:	c7 01       	movw	r24, r14
     6f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
			LCD_GoToXY(1,0);
     6f4:	60 e0       	ldi	r22, 0x00	; 0
     6f6:	81 e0       	ldi	r24, 0x01	; 1
     6f8:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_GoToXY>
			LCD_PutStr("Confirm ???");
     6fc:	81 e3       	ldi	r24, 0x31	; 49
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_PutStr>
			debounce();
     704:	0e 94 26 01 	call	0x24c	; 0x24c <debounce>
			if(button_down)
     708:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <button_down>
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	88 23       	and	r24, r24
     71a:	09 f4       	brne	.+2      	; 0x71e <main+0x266>
     71c:	fb ce       	rjmp	.-522    	; 0x514 <main+0x5c>
			{
				LCD_Clear();
     71e:	0e 94 df 00 	call	0x1be	; 0x1be <LCD_Clear>
				start_Motor();
     722:	0e 94 ee 01 	call	0x3dc	; 0x3dc <start_Motor>
				button_down=0;
     726:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <button_down>
     72a:	f4 ce       	rjmp	.-536    	; 0x514 <main+0x5c>

0000072c <mdio_setPinStatus>:
}

void mdio_togglePinValue(u8_t au8_port, u8_t au8_pin)
{
	/*Toggling the specified pins in PORTx register*/
	*garr_portArray[au8_port] ^= (au8_pin);
     72c:	41 30       	cpi	r20, 0x01	; 1
     72e:	91 f0       	breq	.+36     	; 0x754 <mdio_setPinStatus+0x28>
     730:	18 f0       	brcs	.+6      	; 0x738 <mdio_setPinStatus+0xc>
     732:	42 30       	cpi	r20, 0x02	; 2
     734:	39 f1       	breq	.+78     	; 0x784 <mdio_setPinStatus+0x58>
     736:	08 95       	ret
     738:	e8 2f       	mov	r30, r24
     73a:	f0 e0       	ldi	r31, 0x00	; 0
     73c:	ee 0f       	add	r30, r30
     73e:	ff 1f       	adc	r31, r31
     740:	e7 5b       	subi	r30, 0xB7	; 183
     742:	fe 4f       	sbci	r31, 0xFE	; 254
     744:	01 90       	ld	r0, Z+
     746:	f0 81       	ld	r31, Z
     748:	e0 2d       	mov	r30, r0
     74a:	80 81       	ld	r24, Z
     74c:	60 95       	com	r22
     74e:	68 23       	and	r22, r24
     750:	60 83       	st	Z, r22
     752:	08 95       	ret
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	88 0f       	add	r24, r24
     758:	99 1f       	adc	r25, r25
     75a:	fc 01       	movw	r30, r24
     75c:	e7 5b       	subi	r30, 0xB7	; 183
     75e:	fe 4f       	sbci	r31, 0xFE	; 254
     760:	01 90       	ld	r0, Z+
     762:	f0 81       	ld	r31, Z
     764:	e0 2d       	mov	r30, r0
     766:	20 81       	ld	r18, Z
     768:	36 2f       	mov	r19, r22
     76a:	30 95       	com	r19
     76c:	23 23       	and	r18, r19
     76e:	20 83       	st	Z, r18
     770:	fc 01       	movw	r30, r24
     772:	ed 5b       	subi	r30, 0xBD	; 189
     774:	fe 4f       	sbci	r31, 0xFE	; 254
     776:	01 90       	ld	r0, Z+
     778:	f0 81       	ld	r31, Z
     77a:	e0 2d       	mov	r30, r0
     77c:	80 81       	ld	r24, Z
     77e:	68 2b       	or	r22, r24
     780:	60 83       	st	Z, r22
     782:	08 95       	ret
     784:	e8 2f       	mov	r30, r24
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	ee 0f       	add	r30, r30
     78a:	ff 1f       	adc	r31, r31
     78c:	e7 5b       	subi	r30, 0xB7	; 183
     78e:	fe 4f       	sbci	r31, 0xFE	; 254
     790:	01 90       	ld	r0, Z+
     792:	f0 81       	ld	r31, Z
     794:	e0 2d       	mov	r30, r0
     796:	80 81       	ld	r24, Z
     798:	68 2b       	or	r22, r24
     79a:	60 83       	st	Z, r22
     79c:	08 95       	ret

0000079e <mdio_setPinValue>:
     79e:	44 23       	and	r20, r20
     7a0:	19 f0       	breq	.+6      	; 0x7a8 <mdio_setPinValue+0xa>
     7a2:	41 30       	cpi	r20, 0x01	; 1
     7a4:	79 f0       	breq	.+30     	; 0x7c4 <mdio_setPinValue+0x26>
     7a6:	08 95       	ret
     7a8:	e8 2f       	mov	r30, r24
     7aa:	f0 e0       	ldi	r31, 0x00	; 0
     7ac:	ee 0f       	add	r30, r30
     7ae:	ff 1f       	adc	r31, r31
     7b0:	ed 5b       	subi	r30, 0xBD	; 189
     7b2:	fe 4f       	sbci	r31, 0xFE	; 254
     7b4:	01 90       	ld	r0, Z+
     7b6:	f0 81       	ld	r31, Z
     7b8:	e0 2d       	mov	r30, r0
     7ba:	80 81       	ld	r24, Z
     7bc:	60 95       	com	r22
     7be:	68 23       	and	r22, r24
     7c0:	60 83       	st	Z, r22
     7c2:	08 95       	ret
     7c4:	e8 2f       	mov	r30, r24
     7c6:	f0 e0       	ldi	r31, 0x00	; 0
     7c8:	ee 0f       	add	r30, r30
     7ca:	ff 1f       	adc	r31, r31
     7cc:	ed 5b       	subi	r30, 0xBD	; 189
     7ce:	fe 4f       	sbci	r31, 0xFE	; 254
     7d0:	01 90       	ld	r0, Z+
     7d2:	f0 81       	ld	r31, Z
     7d4:	e0 2d       	mov	r30, r0
     7d6:	80 81       	ld	r24, Z
     7d8:	68 2b       	or	r22, r24
     7da:	60 83       	st	Z, r22
     7dc:	08 95       	ret

000007de <mdio_getPinValue>:
}

void mdio_getPinValue(u8_t au8_port, u8_t au8_pin, u8_t* pu8_pinValue)
{
	/*Checking the PINx value for a specified port pin if it's LOW or not*/
	if( (*garr_pinArray[au8_port] & au8_pin) == LOW )
     7de:	e8 2f       	mov	r30, r24
     7e0:	f0 e0       	ldi	r31, 0x00	; 0
     7e2:	ee 0f       	add	r30, r30
     7e4:	ff 1f       	adc	r31, r31
     7e6:	e3 5c       	subi	r30, 0xC3	; 195
     7e8:	fe 4f       	sbci	r31, 0xFE	; 254
     7ea:	01 90       	ld	r0, Z+
     7ec:	f0 81       	ld	r31, Z
     7ee:	e0 2d       	mov	r30, r0
     7f0:	80 81       	ld	r24, Z
     7f2:	68 23       	and	r22, r24
     7f4:	19 f4       	brne	.+6      	; 0x7fc <mdio_getPinValue+0x1e>
	{
		/*Setting the pin value as LOW*/
		*pu8_pinValue = LOW;
     7f6:	fa 01       	movw	r30, r20
     7f8:	10 82       	st	Z, r1
     7fa:	08 95       	ret
	}
	else
	{
		/*Setting the pin value as HIGH*/
		*pu8_pinValue = HIGH;
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	fa 01       	movw	r30, r20
     800:	80 83       	st	Z, r24
     802:	08 95       	ret

00000804 <__divsf3>:
     804:	0e 94 16 04 	call	0x82c	; 0x82c <__divsf3x>
     808:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_round>
     80c:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__fp_pscB>
     810:	58 f0       	brcs	.+22     	; 0x828 <__divsf3+0x24>
     812:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_pscA>
     816:	40 f0       	brcs	.+16     	; 0x828 <__divsf3+0x24>
     818:	29 f4       	brne	.+10     	; 0x824 <__divsf3+0x20>
     81a:	5f 3f       	cpi	r21, 0xFF	; 255
     81c:	29 f0       	breq	.+10     	; 0x828 <__divsf3+0x24>
     81e:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_inf>
     822:	51 11       	cpse	r21, r1
     824:	0c 94 32 05 	jmp	0xa64	; 0xa64 <__fp_szero>
     828:	0c 94 ed 04 	jmp	0x9da	; 0x9da <__fp_nan>

0000082c <__divsf3x>:
     82c:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__fp_split3>
     830:	68 f3       	brcs	.-38     	; 0x80c <__divsf3+0x8>

00000832 <__divsf3_pse>:
     832:	99 23       	and	r25, r25
     834:	b1 f3       	breq	.-20     	; 0x822 <__divsf3+0x1e>
     836:	55 23       	and	r21, r21
     838:	91 f3       	breq	.-28     	; 0x81e <__divsf3+0x1a>
     83a:	95 1b       	sub	r25, r21
     83c:	55 0b       	sbc	r21, r21
     83e:	bb 27       	eor	r27, r27
     840:	aa 27       	eor	r26, r26
     842:	62 17       	cp	r22, r18
     844:	73 07       	cpc	r23, r19
     846:	84 07       	cpc	r24, r20
     848:	38 f0       	brcs	.+14     	; 0x858 <__divsf3_pse+0x26>
     84a:	9f 5f       	subi	r25, 0xFF	; 255
     84c:	5f 4f       	sbci	r21, 0xFF	; 255
     84e:	22 0f       	add	r18, r18
     850:	33 1f       	adc	r19, r19
     852:	44 1f       	adc	r20, r20
     854:	aa 1f       	adc	r26, r26
     856:	a9 f3       	breq	.-22     	; 0x842 <__divsf3_pse+0x10>
     858:	35 d0       	rcall	.+106    	; 0x8c4 <__divsf3_pse+0x92>
     85a:	0e 2e       	mov	r0, r30
     85c:	3a f0       	brmi	.+14     	; 0x86c <__divsf3_pse+0x3a>
     85e:	e0 e8       	ldi	r30, 0x80	; 128
     860:	32 d0       	rcall	.+100    	; 0x8c6 <__divsf3_pse+0x94>
     862:	91 50       	subi	r25, 0x01	; 1
     864:	50 40       	sbci	r21, 0x00	; 0
     866:	e6 95       	lsr	r30
     868:	00 1c       	adc	r0, r0
     86a:	ca f7       	brpl	.-14     	; 0x85e <__divsf3_pse+0x2c>
     86c:	2b d0       	rcall	.+86     	; 0x8c4 <__divsf3_pse+0x92>
     86e:	fe 2f       	mov	r31, r30
     870:	29 d0       	rcall	.+82     	; 0x8c4 <__divsf3_pse+0x92>
     872:	66 0f       	add	r22, r22
     874:	77 1f       	adc	r23, r23
     876:	88 1f       	adc	r24, r24
     878:	bb 1f       	adc	r27, r27
     87a:	26 17       	cp	r18, r22
     87c:	37 07       	cpc	r19, r23
     87e:	48 07       	cpc	r20, r24
     880:	ab 07       	cpc	r26, r27
     882:	b0 e8       	ldi	r27, 0x80	; 128
     884:	09 f0       	breq	.+2      	; 0x888 <__divsf3_pse+0x56>
     886:	bb 0b       	sbc	r27, r27
     888:	80 2d       	mov	r24, r0
     88a:	bf 01       	movw	r22, r30
     88c:	ff 27       	eor	r31, r31
     88e:	93 58       	subi	r25, 0x83	; 131
     890:	5f 4f       	sbci	r21, 0xFF	; 255
     892:	3a f0       	brmi	.+14     	; 0x8a2 <__divsf3_pse+0x70>
     894:	9e 3f       	cpi	r25, 0xFE	; 254
     896:	51 05       	cpc	r21, r1
     898:	78 f0       	brcs	.+30     	; 0x8b8 <__divsf3_pse+0x86>
     89a:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_inf>
     89e:	0c 94 32 05 	jmp	0xa64	; 0xa64 <__fp_szero>
     8a2:	5f 3f       	cpi	r21, 0xFF	; 255
     8a4:	e4 f3       	brlt	.-8      	; 0x89e <__divsf3_pse+0x6c>
     8a6:	98 3e       	cpi	r25, 0xE8	; 232
     8a8:	d4 f3       	brlt	.-12     	; 0x89e <__divsf3_pse+0x6c>
     8aa:	86 95       	lsr	r24
     8ac:	77 95       	ror	r23
     8ae:	67 95       	ror	r22
     8b0:	b7 95       	ror	r27
     8b2:	f7 95       	ror	r31
     8b4:	9f 5f       	subi	r25, 0xFF	; 255
     8b6:	c9 f7       	brne	.-14     	; 0x8aa <__divsf3_pse+0x78>
     8b8:	88 0f       	add	r24, r24
     8ba:	91 1d       	adc	r25, r1
     8bc:	96 95       	lsr	r25
     8be:	87 95       	ror	r24
     8c0:	97 f9       	bld	r25, 7
     8c2:	08 95       	ret
     8c4:	e1 e0       	ldi	r30, 0x01	; 1
     8c6:	66 0f       	add	r22, r22
     8c8:	77 1f       	adc	r23, r23
     8ca:	88 1f       	adc	r24, r24
     8cc:	bb 1f       	adc	r27, r27
     8ce:	62 17       	cp	r22, r18
     8d0:	73 07       	cpc	r23, r19
     8d2:	84 07       	cpc	r24, r20
     8d4:	ba 07       	cpc	r27, r26
     8d6:	20 f0       	brcs	.+8      	; 0x8e0 <__divsf3_pse+0xae>
     8d8:	62 1b       	sub	r22, r18
     8da:	73 0b       	sbc	r23, r19
     8dc:	84 0b       	sbc	r24, r20
     8de:	ba 0b       	sbc	r27, r26
     8e0:	ee 1f       	adc	r30, r30
     8e2:	88 f7       	brcc	.-30     	; 0x8c6 <__divsf3_pse+0x94>
     8e4:	e0 95       	com	r30
     8e6:	08 95       	ret

000008e8 <__fixsfsi>:
     8e8:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__fixunssfsi>
     8ec:	68 94       	set
     8ee:	b1 11       	cpse	r27, r1
     8f0:	0c 94 32 05 	jmp	0xa64	; 0xa64 <__fp_szero>
     8f4:	08 95       	ret

000008f6 <__fixunssfsi>:
     8f6:	0e 94 17 05 	call	0xa2e	; 0xa2e <__fp_splitA>
     8fa:	88 f0       	brcs	.+34     	; 0x91e <__stack+0x1f>
     8fc:	9f 57       	subi	r25, 0x7F	; 127
     8fe:	98 f0       	brcs	.+38     	; 0x926 <__stack+0x27>
     900:	b9 2f       	mov	r27, r25
     902:	99 27       	eor	r25, r25
     904:	b7 51       	subi	r27, 0x17	; 23
     906:	b0 f0       	brcs	.+44     	; 0x934 <__stack+0x35>
     908:	e1 f0       	breq	.+56     	; 0x942 <__stack+0x43>
     90a:	66 0f       	add	r22, r22
     90c:	77 1f       	adc	r23, r23
     90e:	88 1f       	adc	r24, r24
     910:	99 1f       	adc	r25, r25
     912:	1a f0       	brmi	.+6      	; 0x91a <__stack+0x1b>
     914:	ba 95       	dec	r27
     916:	c9 f7       	brne	.-14     	; 0x90a <__stack+0xb>
     918:	14 c0       	rjmp	.+40     	; 0x942 <__stack+0x43>
     91a:	b1 30       	cpi	r27, 0x01	; 1
     91c:	91 f0       	breq	.+36     	; 0x942 <__stack+0x43>
     91e:	0e 94 31 05 	call	0xa62	; 0xa62 <__fp_zero>
     922:	b1 e0       	ldi	r27, 0x01	; 1
     924:	08 95       	ret
     926:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_zero>
     92a:	67 2f       	mov	r22, r23
     92c:	78 2f       	mov	r23, r24
     92e:	88 27       	eor	r24, r24
     930:	b8 5f       	subi	r27, 0xF8	; 248
     932:	39 f0       	breq	.+14     	; 0x942 <__stack+0x43>
     934:	b9 3f       	cpi	r27, 0xF9	; 249
     936:	cc f3       	brlt	.-14     	; 0x92a <__stack+0x2b>
     938:	86 95       	lsr	r24
     93a:	77 95       	ror	r23
     93c:	67 95       	ror	r22
     93e:	b3 95       	inc	r27
     940:	d9 f7       	brne	.-10     	; 0x938 <__stack+0x39>
     942:	3e f4       	brtc	.+14     	; 0x952 <__stack+0x53>
     944:	90 95       	com	r25
     946:	80 95       	com	r24
     948:	70 95       	com	r23
     94a:	61 95       	neg	r22
     94c:	7f 4f       	sbci	r23, 0xFF	; 255
     94e:	8f 4f       	sbci	r24, 0xFF	; 255
     950:	9f 4f       	sbci	r25, 0xFF	; 255
     952:	08 95       	ret

00000954 <__floatunsisf>:
     954:	e8 94       	clt
     956:	09 c0       	rjmp	.+18     	; 0x96a <__floatsisf+0x12>

00000958 <__floatsisf>:
     958:	97 fb       	bst	r25, 7
     95a:	3e f4       	brtc	.+14     	; 0x96a <__floatsisf+0x12>
     95c:	90 95       	com	r25
     95e:	80 95       	com	r24
     960:	70 95       	com	r23
     962:	61 95       	neg	r22
     964:	7f 4f       	sbci	r23, 0xFF	; 255
     966:	8f 4f       	sbci	r24, 0xFF	; 255
     968:	9f 4f       	sbci	r25, 0xFF	; 255
     96a:	99 23       	and	r25, r25
     96c:	a9 f0       	breq	.+42     	; 0x998 <__floatsisf+0x40>
     96e:	f9 2f       	mov	r31, r25
     970:	96 e9       	ldi	r25, 0x96	; 150
     972:	bb 27       	eor	r27, r27
     974:	93 95       	inc	r25
     976:	f6 95       	lsr	r31
     978:	87 95       	ror	r24
     97a:	77 95       	ror	r23
     97c:	67 95       	ror	r22
     97e:	b7 95       	ror	r27
     980:	f1 11       	cpse	r31, r1
     982:	f8 cf       	rjmp	.-16     	; 0x974 <__floatsisf+0x1c>
     984:	fa f4       	brpl	.+62     	; 0x9c4 <__floatsisf+0x6c>
     986:	bb 0f       	add	r27, r27
     988:	11 f4       	brne	.+4      	; 0x98e <__floatsisf+0x36>
     98a:	60 ff       	sbrs	r22, 0
     98c:	1b c0       	rjmp	.+54     	; 0x9c4 <__floatsisf+0x6c>
     98e:	6f 5f       	subi	r22, 0xFF	; 255
     990:	7f 4f       	sbci	r23, 0xFF	; 255
     992:	8f 4f       	sbci	r24, 0xFF	; 255
     994:	9f 4f       	sbci	r25, 0xFF	; 255
     996:	16 c0       	rjmp	.+44     	; 0x9c4 <__floatsisf+0x6c>
     998:	88 23       	and	r24, r24
     99a:	11 f0       	breq	.+4      	; 0x9a0 <__floatsisf+0x48>
     99c:	96 e9       	ldi	r25, 0x96	; 150
     99e:	11 c0       	rjmp	.+34     	; 0x9c2 <__floatsisf+0x6a>
     9a0:	77 23       	and	r23, r23
     9a2:	21 f0       	breq	.+8      	; 0x9ac <__floatsisf+0x54>
     9a4:	9e e8       	ldi	r25, 0x8E	; 142
     9a6:	87 2f       	mov	r24, r23
     9a8:	76 2f       	mov	r23, r22
     9aa:	05 c0       	rjmp	.+10     	; 0x9b6 <__floatsisf+0x5e>
     9ac:	66 23       	and	r22, r22
     9ae:	71 f0       	breq	.+28     	; 0x9cc <__floatsisf+0x74>
     9b0:	96 e8       	ldi	r25, 0x86	; 134
     9b2:	86 2f       	mov	r24, r22
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	60 e0       	ldi	r22, 0x00	; 0
     9b8:	2a f0       	brmi	.+10     	; 0x9c4 <__floatsisf+0x6c>
     9ba:	9a 95       	dec	r25
     9bc:	66 0f       	add	r22, r22
     9be:	77 1f       	adc	r23, r23
     9c0:	88 1f       	adc	r24, r24
     9c2:	da f7       	brpl	.-10     	; 0x9ba <__floatsisf+0x62>
     9c4:	88 0f       	add	r24, r24
     9c6:	96 95       	lsr	r25
     9c8:	87 95       	ror	r24
     9ca:	97 f9       	bld	r25, 7
     9cc:	08 95       	ret

000009ce <__fp_inf>:
     9ce:	97 f9       	bld	r25, 7
     9d0:	9f 67       	ori	r25, 0x7F	; 127
     9d2:	80 e8       	ldi	r24, 0x80	; 128
     9d4:	70 e0       	ldi	r23, 0x00	; 0
     9d6:	60 e0       	ldi	r22, 0x00	; 0
     9d8:	08 95       	ret

000009da <__fp_nan>:
     9da:	9f ef       	ldi	r25, 0xFF	; 255
     9dc:	80 ec       	ldi	r24, 0xC0	; 192
     9de:	08 95       	ret

000009e0 <__fp_pscA>:
     9e0:	00 24       	eor	r0, r0
     9e2:	0a 94       	dec	r0
     9e4:	16 16       	cp	r1, r22
     9e6:	17 06       	cpc	r1, r23
     9e8:	18 06       	cpc	r1, r24
     9ea:	09 06       	cpc	r0, r25
     9ec:	08 95       	ret

000009ee <__fp_pscB>:
     9ee:	00 24       	eor	r0, r0
     9f0:	0a 94       	dec	r0
     9f2:	12 16       	cp	r1, r18
     9f4:	13 06       	cpc	r1, r19
     9f6:	14 06       	cpc	r1, r20
     9f8:	05 06       	cpc	r0, r21
     9fa:	08 95       	ret

000009fc <__fp_round>:
     9fc:	09 2e       	mov	r0, r25
     9fe:	03 94       	inc	r0
     a00:	00 0c       	add	r0, r0
     a02:	11 f4       	brne	.+4      	; 0xa08 <__fp_round+0xc>
     a04:	88 23       	and	r24, r24
     a06:	52 f0       	brmi	.+20     	; 0xa1c <__fp_round+0x20>
     a08:	bb 0f       	add	r27, r27
     a0a:	40 f4       	brcc	.+16     	; 0xa1c <__fp_round+0x20>
     a0c:	bf 2b       	or	r27, r31
     a0e:	11 f4       	brne	.+4      	; 0xa14 <__fp_round+0x18>
     a10:	60 ff       	sbrs	r22, 0
     a12:	04 c0       	rjmp	.+8      	; 0xa1c <__fp_round+0x20>
     a14:	6f 5f       	subi	r22, 0xFF	; 255
     a16:	7f 4f       	sbci	r23, 0xFF	; 255
     a18:	8f 4f       	sbci	r24, 0xFF	; 255
     a1a:	9f 4f       	sbci	r25, 0xFF	; 255
     a1c:	08 95       	ret

00000a1e <__fp_split3>:
     a1e:	57 fd       	sbrc	r21, 7
     a20:	90 58       	subi	r25, 0x80	; 128
     a22:	44 0f       	add	r20, r20
     a24:	55 1f       	adc	r21, r21
     a26:	59 f0       	breq	.+22     	; 0xa3e <__fp_splitA+0x10>
     a28:	5f 3f       	cpi	r21, 0xFF	; 255
     a2a:	71 f0       	breq	.+28     	; 0xa48 <__fp_splitA+0x1a>
     a2c:	47 95       	ror	r20

00000a2e <__fp_splitA>:
     a2e:	88 0f       	add	r24, r24
     a30:	97 fb       	bst	r25, 7
     a32:	99 1f       	adc	r25, r25
     a34:	61 f0       	breq	.+24     	; 0xa4e <__fp_splitA+0x20>
     a36:	9f 3f       	cpi	r25, 0xFF	; 255
     a38:	79 f0       	breq	.+30     	; 0xa58 <__fp_splitA+0x2a>
     a3a:	87 95       	ror	r24
     a3c:	08 95       	ret
     a3e:	12 16       	cp	r1, r18
     a40:	13 06       	cpc	r1, r19
     a42:	14 06       	cpc	r1, r20
     a44:	55 1f       	adc	r21, r21
     a46:	f2 cf       	rjmp	.-28     	; 0xa2c <__fp_split3+0xe>
     a48:	46 95       	lsr	r20
     a4a:	f1 df       	rcall	.-30     	; 0xa2e <__fp_splitA>
     a4c:	08 c0       	rjmp	.+16     	; 0xa5e <__fp_splitA+0x30>
     a4e:	16 16       	cp	r1, r22
     a50:	17 06       	cpc	r1, r23
     a52:	18 06       	cpc	r1, r24
     a54:	99 1f       	adc	r25, r25
     a56:	f1 cf       	rjmp	.-30     	; 0xa3a <__fp_splitA+0xc>
     a58:	86 95       	lsr	r24
     a5a:	71 05       	cpc	r23, r1
     a5c:	61 05       	cpc	r22, r1
     a5e:	08 94       	sec
     a60:	08 95       	ret

00000a62 <__fp_zero>:
     a62:	e8 94       	clt

00000a64 <__fp_szero>:
     a64:	bb 27       	eor	r27, r27
     a66:	66 27       	eor	r22, r22
     a68:	77 27       	eor	r23, r23
     a6a:	cb 01       	movw	r24, r22
     a6c:	97 f9       	bld	r25, 7
     a6e:	08 95       	ret

00000a70 <__mulsf3>:
     a70:	0e 94 4b 05 	call	0xa96	; 0xa96 <__mulsf3x>
     a74:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_round>
     a78:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_pscA>
     a7c:	38 f0       	brcs	.+14     	; 0xa8c <__mulsf3+0x1c>
     a7e:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__fp_pscB>
     a82:	20 f0       	brcs	.+8      	; 0xa8c <__mulsf3+0x1c>
     a84:	95 23       	and	r25, r21
     a86:	11 f0       	breq	.+4      	; 0xa8c <__mulsf3+0x1c>
     a88:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_inf>
     a8c:	0c 94 ed 04 	jmp	0x9da	; 0x9da <__fp_nan>
     a90:	11 24       	eor	r1, r1
     a92:	0c 94 32 05 	jmp	0xa64	; 0xa64 <__fp_szero>

00000a96 <__mulsf3x>:
     a96:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__fp_split3>
     a9a:	70 f3       	brcs	.-36     	; 0xa78 <__mulsf3+0x8>

00000a9c <__mulsf3_pse>:
     a9c:	95 9f       	mul	r25, r21
     a9e:	c1 f3       	breq	.-16     	; 0xa90 <__mulsf3+0x20>
     aa0:	95 0f       	add	r25, r21
     aa2:	50 e0       	ldi	r21, 0x00	; 0
     aa4:	55 1f       	adc	r21, r21
     aa6:	62 9f       	mul	r22, r18
     aa8:	f0 01       	movw	r30, r0
     aaa:	72 9f       	mul	r23, r18
     aac:	bb 27       	eor	r27, r27
     aae:	f0 0d       	add	r31, r0
     ab0:	b1 1d       	adc	r27, r1
     ab2:	63 9f       	mul	r22, r19
     ab4:	aa 27       	eor	r26, r26
     ab6:	f0 0d       	add	r31, r0
     ab8:	b1 1d       	adc	r27, r1
     aba:	aa 1f       	adc	r26, r26
     abc:	64 9f       	mul	r22, r20
     abe:	66 27       	eor	r22, r22
     ac0:	b0 0d       	add	r27, r0
     ac2:	a1 1d       	adc	r26, r1
     ac4:	66 1f       	adc	r22, r22
     ac6:	82 9f       	mul	r24, r18
     ac8:	22 27       	eor	r18, r18
     aca:	b0 0d       	add	r27, r0
     acc:	a1 1d       	adc	r26, r1
     ace:	62 1f       	adc	r22, r18
     ad0:	73 9f       	mul	r23, r19
     ad2:	b0 0d       	add	r27, r0
     ad4:	a1 1d       	adc	r26, r1
     ad6:	62 1f       	adc	r22, r18
     ad8:	83 9f       	mul	r24, r19
     ada:	a0 0d       	add	r26, r0
     adc:	61 1d       	adc	r22, r1
     ade:	22 1f       	adc	r18, r18
     ae0:	74 9f       	mul	r23, r20
     ae2:	33 27       	eor	r19, r19
     ae4:	a0 0d       	add	r26, r0
     ae6:	61 1d       	adc	r22, r1
     ae8:	23 1f       	adc	r18, r19
     aea:	84 9f       	mul	r24, r20
     aec:	60 0d       	add	r22, r0
     aee:	21 1d       	adc	r18, r1
     af0:	82 2f       	mov	r24, r18
     af2:	76 2f       	mov	r23, r22
     af4:	6a 2f       	mov	r22, r26
     af6:	11 24       	eor	r1, r1
     af8:	9f 57       	subi	r25, 0x7F	; 127
     afa:	50 40       	sbci	r21, 0x00	; 0
     afc:	9a f0       	brmi	.+38     	; 0xb24 <__mulsf3_pse+0x88>
     afe:	f1 f0       	breq	.+60     	; 0xb3c <__mulsf3_pse+0xa0>
     b00:	88 23       	and	r24, r24
     b02:	4a f0       	brmi	.+18     	; 0xb16 <__mulsf3_pse+0x7a>
     b04:	ee 0f       	add	r30, r30
     b06:	ff 1f       	adc	r31, r31
     b08:	bb 1f       	adc	r27, r27
     b0a:	66 1f       	adc	r22, r22
     b0c:	77 1f       	adc	r23, r23
     b0e:	88 1f       	adc	r24, r24
     b10:	91 50       	subi	r25, 0x01	; 1
     b12:	50 40       	sbci	r21, 0x00	; 0
     b14:	a9 f7       	brne	.-22     	; 0xb00 <__mulsf3_pse+0x64>
     b16:	9e 3f       	cpi	r25, 0xFE	; 254
     b18:	51 05       	cpc	r21, r1
     b1a:	80 f0       	brcs	.+32     	; 0xb3c <__mulsf3_pse+0xa0>
     b1c:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_inf>
     b20:	0c 94 32 05 	jmp	0xa64	; 0xa64 <__fp_szero>
     b24:	5f 3f       	cpi	r21, 0xFF	; 255
     b26:	e4 f3       	brlt	.-8      	; 0xb20 <__mulsf3_pse+0x84>
     b28:	98 3e       	cpi	r25, 0xE8	; 232
     b2a:	d4 f3       	brlt	.-12     	; 0xb20 <__mulsf3_pse+0x84>
     b2c:	86 95       	lsr	r24
     b2e:	77 95       	ror	r23
     b30:	67 95       	ror	r22
     b32:	b7 95       	ror	r27
     b34:	f7 95       	ror	r31
     b36:	e7 95       	ror	r30
     b38:	9f 5f       	subi	r25, 0xFF	; 255
     b3a:	c1 f7       	brne	.-16     	; 0xb2c <__mulsf3_pse+0x90>
     b3c:	fe 2b       	or	r31, r30
     b3e:	88 0f       	add	r24, r24
     b40:	91 1d       	adc	r25, r1
     b42:	96 95       	lsr	r25
     b44:	87 95       	ror	r24
     b46:	97 f9       	bld	r25, 7
     b48:	08 95       	ret

00000b4a <__divmodhi4>:
     b4a:	97 fb       	bst	r25, 7
     b4c:	07 2e       	mov	r0, r23
     b4e:	16 f4       	brtc	.+4      	; 0xb54 <__divmodhi4+0xa>
     b50:	00 94       	com	r0
     b52:	07 d0       	rcall	.+14     	; 0xb62 <__divmodhi4_neg1>
     b54:	77 fd       	sbrc	r23, 7
     b56:	09 d0       	rcall	.+18     	; 0xb6a <__divmodhi4_neg2>
     b58:	0e 94 b9 05 	call	0xb72	; 0xb72 <__udivmodhi4>
     b5c:	07 fc       	sbrc	r0, 7
     b5e:	05 d0       	rcall	.+10     	; 0xb6a <__divmodhi4_neg2>
     b60:	3e f4       	brtc	.+14     	; 0xb70 <__divmodhi4_exit>

00000b62 <__divmodhi4_neg1>:
     b62:	90 95       	com	r25
     b64:	81 95       	neg	r24
     b66:	9f 4f       	sbci	r25, 0xFF	; 255
     b68:	08 95       	ret

00000b6a <__divmodhi4_neg2>:
     b6a:	70 95       	com	r23
     b6c:	61 95       	neg	r22
     b6e:	7f 4f       	sbci	r23, 0xFF	; 255

00000b70 <__divmodhi4_exit>:
     b70:	08 95       	ret

00000b72 <__udivmodhi4>:
     b72:	aa 1b       	sub	r26, r26
     b74:	bb 1b       	sub	r27, r27
     b76:	51 e1       	ldi	r21, 0x11	; 17
     b78:	07 c0       	rjmp	.+14     	; 0xb88 <__udivmodhi4_ep>

00000b7a <__udivmodhi4_loop>:
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	a6 17       	cp	r26, r22
     b80:	b7 07       	cpc	r27, r23
     b82:	10 f0       	brcs	.+4      	; 0xb88 <__udivmodhi4_ep>
     b84:	a6 1b       	sub	r26, r22
     b86:	b7 0b       	sbc	r27, r23

00000b88 <__udivmodhi4_ep>:
     b88:	88 1f       	adc	r24, r24
     b8a:	99 1f       	adc	r25, r25
     b8c:	5a 95       	dec	r21
     b8e:	a9 f7       	brne	.-22     	; 0xb7a <__udivmodhi4_loop>
     b90:	80 95       	com	r24
     b92:	90 95       	com	r25
     b94:	bc 01       	movw	r22, r24
     b96:	cd 01       	movw	r24, r26
     b98:	08 95       	ret

00000b9a <sprintf>:
     b9a:	ae e0       	ldi	r26, 0x0E	; 14
     b9c:	b0 e0       	ldi	r27, 0x00	; 0
     b9e:	e3 ed       	ldi	r30, 0xD3	; 211
     ba0:	f5 e0       	ldi	r31, 0x05	; 5
     ba2:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__prologue_saves__+0x1c>
     ba6:	0d 89       	ldd	r16, Y+21	; 0x15
     ba8:	1e 89       	ldd	r17, Y+22	; 0x16
     baa:	86 e0       	ldi	r24, 0x06	; 6
     bac:	8c 83       	std	Y+4, r24	; 0x04
     bae:	1a 83       	std	Y+2, r17	; 0x02
     bb0:	09 83       	std	Y+1, r16	; 0x01
     bb2:	8f ef       	ldi	r24, 0xFF	; 255
     bb4:	9f e7       	ldi	r25, 0x7F	; 127
     bb6:	9e 83       	std	Y+6, r25	; 0x06
     bb8:	8d 83       	std	Y+5, r24	; 0x05
     bba:	ae 01       	movw	r20, r28
     bbc:	47 5e       	subi	r20, 0xE7	; 231
     bbe:	5f 4f       	sbci	r21, 0xFF	; 255
     bc0:	6f 89       	ldd	r22, Y+23	; 0x17
     bc2:	78 8d       	ldd	r23, Y+24	; 0x18
     bc4:	ce 01       	movw	r24, r28
     bc6:	01 96       	adiw	r24, 0x01	; 1
     bc8:	0e 94 ef 05 	call	0xbde	; 0xbde <vfprintf>
     bcc:	ef 81       	ldd	r30, Y+7	; 0x07
     bce:	f8 85       	ldd	r31, Y+8	; 0x08
     bd0:	e0 0f       	add	r30, r16
     bd2:	f1 1f       	adc	r31, r17
     bd4:	10 82       	st	Z, r1
     bd6:	2e 96       	adiw	r28, 0x0e	; 14
     bd8:	e4 e0       	ldi	r30, 0x04	; 4
     bda:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__epilogue_restores__+0x1c>

00000bde <vfprintf>:
     bde:	ab e0       	ldi	r26, 0x0B	; 11
     be0:	b0 e0       	ldi	r27, 0x00	; 0
     be2:	e5 ef       	ldi	r30, 0xF5	; 245
     be4:	f5 e0       	ldi	r31, 0x05	; 5
     be6:	0c 94 80 08 	jmp	0x1100	; 0x1100 <__prologue_saves__>
     bea:	6c 01       	movw	r12, r24
     bec:	7b 01       	movw	r14, r22
     bee:	8a 01       	movw	r16, r20
     bf0:	fc 01       	movw	r30, r24
     bf2:	17 82       	std	Z+7, r1	; 0x07
     bf4:	16 82       	std	Z+6, r1	; 0x06
     bf6:	83 81       	ldd	r24, Z+3	; 0x03
     bf8:	81 ff       	sbrs	r24, 1
     bfa:	cc c1       	rjmp	.+920    	; 0xf94 <vfprintf+0x3b6>
     bfc:	ce 01       	movw	r24, r28
     bfe:	01 96       	adiw	r24, 0x01	; 1
     c00:	3c 01       	movw	r6, r24
     c02:	f6 01       	movw	r30, r12
     c04:	93 81       	ldd	r25, Z+3	; 0x03
     c06:	f7 01       	movw	r30, r14
     c08:	93 fd       	sbrc	r25, 3
     c0a:	85 91       	lpm	r24, Z+
     c0c:	93 ff       	sbrs	r25, 3
     c0e:	81 91       	ld	r24, Z+
     c10:	7f 01       	movw	r14, r30
     c12:	88 23       	and	r24, r24
     c14:	09 f4       	brne	.+2      	; 0xc18 <vfprintf+0x3a>
     c16:	ba c1       	rjmp	.+884    	; 0xf8c <vfprintf+0x3ae>
     c18:	85 32       	cpi	r24, 0x25	; 37
     c1a:	39 f4       	brne	.+14     	; 0xc2a <vfprintf+0x4c>
     c1c:	93 fd       	sbrc	r25, 3
     c1e:	85 91       	lpm	r24, Z+
     c20:	93 ff       	sbrs	r25, 3
     c22:	81 91       	ld	r24, Z+
     c24:	7f 01       	movw	r14, r30
     c26:	85 32       	cpi	r24, 0x25	; 37
     c28:	29 f4       	brne	.+10     	; 0xc34 <vfprintf+0x56>
     c2a:	b6 01       	movw	r22, r12
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     c32:	e7 cf       	rjmp	.-50     	; 0xc02 <vfprintf+0x24>
     c34:	91 2c       	mov	r9, r1
     c36:	21 2c       	mov	r2, r1
     c38:	31 2c       	mov	r3, r1
     c3a:	ff e1       	ldi	r31, 0x1F	; 31
     c3c:	f3 15       	cp	r31, r3
     c3e:	d8 f0       	brcs	.+54     	; 0xc76 <vfprintf+0x98>
     c40:	8b 32       	cpi	r24, 0x2B	; 43
     c42:	79 f0       	breq	.+30     	; 0xc62 <vfprintf+0x84>
     c44:	38 f4       	brcc	.+14     	; 0xc54 <vfprintf+0x76>
     c46:	80 32       	cpi	r24, 0x20	; 32
     c48:	79 f0       	breq	.+30     	; 0xc68 <vfprintf+0x8a>
     c4a:	83 32       	cpi	r24, 0x23	; 35
     c4c:	a1 f4       	brne	.+40     	; 0xc76 <vfprintf+0x98>
     c4e:	23 2d       	mov	r18, r3
     c50:	20 61       	ori	r18, 0x10	; 16
     c52:	1d c0       	rjmp	.+58     	; 0xc8e <vfprintf+0xb0>
     c54:	8d 32       	cpi	r24, 0x2D	; 45
     c56:	61 f0       	breq	.+24     	; 0xc70 <vfprintf+0x92>
     c58:	80 33       	cpi	r24, 0x30	; 48
     c5a:	69 f4       	brne	.+26     	; 0xc76 <vfprintf+0x98>
     c5c:	23 2d       	mov	r18, r3
     c5e:	21 60       	ori	r18, 0x01	; 1
     c60:	16 c0       	rjmp	.+44     	; 0xc8e <vfprintf+0xb0>
     c62:	83 2d       	mov	r24, r3
     c64:	82 60       	ori	r24, 0x02	; 2
     c66:	38 2e       	mov	r3, r24
     c68:	e3 2d       	mov	r30, r3
     c6a:	e4 60       	ori	r30, 0x04	; 4
     c6c:	3e 2e       	mov	r3, r30
     c6e:	2a c0       	rjmp	.+84     	; 0xcc4 <vfprintf+0xe6>
     c70:	f3 2d       	mov	r31, r3
     c72:	f8 60       	ori	r31, 0x08	; 8
     c74:	1d c0       	rjmp	.+58     	; 0xcb0 <vfprintf+0xd2>
     c76:	37 fc       	sbrc	r3, 7
     c78:	2d c0       	rjmp	.+90     	; 0xcd4 <vfprintf+0xf6>
     c7a:	20 ed       	ldi	r18, 0xD0	; 208
     c7c:	28 0f       	add	r18, r24
     c7e:	2a 30       	cpi	r18, 0x0A	; 10
     c80:	40 f0       	brcs	.+16     	; 0xc92 <vfprintf+0xb4>
     c82:	8e 32       	cpi	r24, 0x2E	; 46
     c84:	b9 f4       	brne	.+46     	; 0xcb4 <vfprintf+0xd6>
     c86:	36 fc       	sbrc	r3, 6
     c88:	81 c1       	rjmp	.+770    	; 0xf8c <vfprintf+0x3ae>
     c8a:	23 2d       	mov	r18, r3
     c8c:	20 64       	ori	r18, 0x40	; 64
     c8e:	32 2e       	mov	r3, r18
     c90:	19 c0       	rjmp	.+50     	; 0xcc4 <vfprintf+0xe6>
     c92:	36 fe       	sbrs	r3, 6
     c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0xc4>
     c96:	8a e0       	ldi	r24, 0x0A	; 10
     c98:	98 9e       	mul	r9, r24
     c9a:	20 0d       	add	r18, r0
     c9c:	11 24       	eor	r1, r1
     c9e:	92 2e       	mov	r9, r18
     ca0:	11 c0       	rjmp	.+34     	; 0xcc4 <vfprintf+0xe6>
     ca2:	ea e0       	ldi	r30, 0x0A	; 10
     ca4:	2e 9e       	mul	r2, r30
     ca6:	20 0d       	add	r18, r0
     ca8:	11 24       	eor	r1, r1
     caa:	22 2e       	mov	r2, r18
     cac:	f3 2d       	mov	r31, r3
     cae:	f0 62       	ori	r31, 0x20	; 32
     cb0:	3f 2e       	mov	r3, r31
     cb2:	08 c0       	rjmp	.+16     	; 0xcc4 <vfprintf+0xe6>
     cb4:	8c 36       	cpi	r24, 0x6C	; 108
     cb6:	21 f4       	brne	.+8      	; 0xcc0 <vfprintf+0xe2>
     cb8:	83 2d       	mov	r24, r3
     cba:	80 68       	ori	r24, 0x80	; 128
     cbc:	38 2e       	mov	r3, r24
     cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <vfprintf+0xe6>
     cc0:	88 36       	cpi	r24, 0x68	; 104
     cc2:	41 f4       	brne	.+16     	; 0xcd4 <vfprintf+0xf6>
     cc4:	f7 01       	movw	r30, r14
     cc6:	93 fd       	sbrc	r25, 3
     cc8:	85 91       	lpm	r24, Z+
     cca:	93 ff       	sbrs	r25, 3
     ccc:	81 91       	ld	r24, Z+
     cce:	7f 01       	movw	r14, r30
     cd0:	81 11       	cpse	r24, r1
     cd2:	b3 cf       	rjmp	.-154    	; 0xc3a <vfprintf+0x5c>
     cd4:	98 2f       	mov	r25, r24
     cd6:	9f 7d       	andi	r25, 0xDF	; 223
     cd8:	95 54       	subi	r25, 0x45	; 69
     cda:	93 30       	cpi	r25, 0x03	; 3
     cdc:	28 f4       	brcc	.+10     	; 0xce8 <vfprintf+0x10a>
     cde:	0c 5f       	subi	r16, 0xFC	; 252
     ce0:	1f 4f       	sbci	r17, 0xFF	; 255
     ce2:	9f e3       	ldi	r25, 0x3F	; 63
     ce4:	99 83       	std	Y+1, r25	; 0x01
     ce6:	0d c0       	rjmp	.+26     	; 0xd02 <vfprintf+0x124>
     ce8:	83 36       	cpi	r24, 0x63	; 99
     cea:	31 f0       	breq	.+12     	; 0xcf8 <vfprintf+0x11a>
     cec:	83 37       	cpi	r24, 0x73	; 115
     cee:	71 f0       	breq	.+28     	; 0xd0c <vfprintf+0x12e>
     cf0:	83 35       	cpi	r24, 0x53	; 83
     cf2:	09 f0       	breq	.+2      	; 0xcf6 <vfprintf+0x118>
     cf4:	59 c0       	rjmp	.+178    	; 0xda8 <vfprintf+0x1ca>
     cf6:	21 c0       	rjmp	.+66     	; 0xd3a <vfprintf+0x15c>
     cf8:	f8 01       	movw	r30, r16
     cfa:	80 81       	ld	r24, Z
     cfc:	89 83       	std	Y+1, r24	; 0x01
     cfe:	0e 5f       	subi	r16, 0xFE	; 254
     d00:	1f 4f       	sbci	r17, 0xFF	; 255
     d02:	88 24       	eor	r8, r8
     d04:	83 94       	inc	r8
     d06:	91 2c       	mov	r9, r1
     d08:	53 01       	movw	r10, r6
     d0a:	13 c0       	rjmp	.+38     	; 0xd32 <vfprintf+0x154>
     d0c:	28 01       	movw	r4, r16
     d0e:	f2 e0       	ldi	r31, 0x02	; 2
     d10:	4f 0e       	add	r4, r31
     d12:	51 1c       	adc	r5, r1
     d14:	f8 01       	movw	r30, r16
     d16:	a0 80       	ld	r10, Z
     d18:	b1 80       	ldd	r11, Z+1	; 0x01
     d1a:	36 fe       	sbrs	r3, 6
     d1c:	03 c0       	rjmp	.+6      	; 0xd24 <vfprintf+0x146>
     d1e:	69 2d       	mov	r22, r9
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	02 c0       	rjmp	.+4      	; 0xd28 <vfprintf+0x14a>
     d24:	6f ef       	ldi	r22, 0xFF	; 255
     d26:	7f ef       	ldi	r23, 0xFF	; 255
     d28:	c5 01       	movw	r24, r10
     d2a:	0e 94 db 07 	call	0xfb6	; 0xfb6 <strnlen>
     d2e:	4c 01       	movw	r8, r24
     d30:	82 01       	movw	r16, r4
     d32:	f3 2d       	mov	r31, r3
     d34:	ff 77       	andi	r31, 0x7F	; 127
     d36:	3f 2e       	mov	r3, r31
     d38:	16 c0       	rjmp	.+44     	; 0xd66 <vfprintf+0x188>
     d3a:	28 01       	movw	r4, r16
     d3c:	22 e0       	ldi	r18, 0x02	; 2
     d3e:	42 0e       	add	r4, r18
     d40:	51 1c       	adc	r5, r1
     d42:	f8 01       	movw	r30, r16
     d44:	a0 80       	ld	r10, Z
     d46:	b1 80       	ldd	r11, Z+1	; 0x01
     d48:	36 fe       	sbrs	r3, 6
     d4a:	03 c0       	rjmp	.+6      	; 0xd52 <vfprintf+0x174>
     d4c:	69 2d       	mov	r22, r9
     d4e:	70 e0       	ldi	r23, 0x00	; 0
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <vfprintf+0x178>
     d52:	6f ef       	ldi	r22, 0xFF	; 255
     d54:	7f ef       	ldi	r23, 0xFF	; 255
     d56:	c5 01       	movw	r24, r10
     d58:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <strnlen_P>
     d5c:	4c 01       	movw	r8, r24
     d5e:	f3 2d       	mov	r31, r3
     d60:	f0 68       	ori	r31, 0x80	; 128
     d62:	3f 2e       	mov	r3, r31
     d64:	82 01       	movw	r16, r4
     d66:	33 fc       	sbrc	r3, 3
     d68:	1b c0       	rjmp	.+54     	; 0xda0 <vfprintf+0x1c2>
     d6a:	82 2d       	mov	r24, r2
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	88 16       	cp	r8, r24
     d70:	99 06       	cpc	r9, r25
     d72:	b0 f4       	brcc	.+44     	; 0xda0 <vfprintf+0x1c2>
     d74:	b6 01       	movw	r22, r12
     d76:	80 e2       	ldi	r24, 0x20	; 32
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     d7e:	2a 94       	dec	r2
     d80:	f4 cf       	rjmp	.-24     	; 0xd6a <vfprintf+0x18c>
     d82:	f5 01       	movw	r30, r10
     d84:	37 fc       	sbrc	r3, 7
     d86:	85 91       	lpm	r24, Z+
     d88:	37 fe       	sbrs	r3, 7
     d8a:	81 91       	ld	r24, Z+
     d8c:	5f 01       	movw	r10, r30
     d8e:	b6 01       	movw	r22, r12
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     d96:	21 10       	cpse	r2, r1
     d98:	2a 94       	dec	r2
     d9a:	21 e0       	ldi	r18, 0x01	; 1
     d9c:	82 1a       	sub	r8, r18
     d9e:	91 08       	sbc	r9, r1
     da0:	81 14       	cp	r8, r1
     da2:	91 04       	cpc	r9, r1
     da4:	71 f7       	brne	.-36     	; 0xd82 <vfprintf+0x1a4>
     da6:	e8 c0       	rjmp	.+464    	; 0xf78 <vfprintf+0x39a>
     da8:	84 36       	cpi	r24, 0x64	; 100
     daa:	11 f0       	breq	.+4      	; 0xdb0 <vfprintf+0x1d2>
     dac:	89 36       	cpi	r24, 0x69	; 105
     dae:	41 f5       	brne	.+80     	; 0xe00 <vfprintf+0x222>
     db0:	f8 01       	movw	r30, r16
     db2:	37 fe       	sbrs	r3, 7
     db4:	07 c0       	rjmp	.+14     	; 0xdc4 <vfprintf+0x1e6>
     db6:	60 81       	ld	r22, Z
     db8:	71 81       	ldd	r23, Z+1	; 0x01
     dba:	82 81       	ldd	r24, Z+2	; 0x02
     dbc:	93 81       	ldd	r25, Z+3	; 0x03
     dbe:	0c 5f       	subi	r16, 0xFC	; 252
     dc0:	1f 4f       	sbci	r17, 0xFF	; 255
     dc2:	08 c0       	rjmp	.+16     	; 0xdd4 <vfprintf+0x1f6>
     dc4:	60 81       	ld	r22, Z
     dc6:	71 81       	ldd	r23, Z+1	; 0x01
     dc8:	07 2e       	mov	r0, r23
     dca:	00 0c       	add	r0, r0
     dcc:	88 0b       	sbc	r24, r24
     dce:	99 0b       	sbc	r25, r25
     dd0:	0e 5f       	subi	r16, 0xFE	; 254
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	f3 2d       	mov	r31, r3
     dd6:	ff 76       	andi	r31, 0x6F	; 111
     dd8:	3f 2e       	mov	r3, r31
     dda:	97 ff       	sbrs	r25, 7
     ddc:	09 c0       	rjmp	.+18     	; 0xdf0 <vfprintf+0x212>
     dde:	90 95       	com	r25
     de0:	80 95       	com	r24
     de2:	70 95       	com	r23
     de4:	61 95       	neg	r22
     de6:	7f 4f       	sbci	r23, 0xFF	; 255
     de8:	8f 4f       	sbci	r24, 0xFF	; 255
     dea:	9f 4f       	sbci	r25, 0xFF	; 255
     dec:	f0 68       	ori	r31, 0x80	; 128
     dee:	3f 2e       	mov	r3, r31
     df0:	2a e0       	ldi	r18, 0x0A	; 10
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	a3 01       	movw	r20, r6
     df6:	0e 94 22 08 	call	0x1044	; 0x1044 <__ultoa_invert>
     dfa:	88 2e       	mov	r8, r24
     dfc:	86 18       	sub	r8, r6
     dfe:	45 c0       	rjmp	.+138    	; 0xe8a <vfprintf+0x2ac>
     e00:	85 37       	cpi	r24, 0x75	; 117
     e02:	31 f4       	brne	.+12     	; 0xe10 <vfprintf+0x232>
     e04:	23 2d       	mov	r18, r3
     e06:	2f 7e       	andi	r18, 0xEF	; 239
     e08:	b2 2e       	mov	r11, r18
     e0a:	2a e0       	ldi	r18, 0x0A	; 10
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	25 c0       	rjmp	.+74     	; 0xe5a <vfprintf+0x27c>
     e10:	93 2d       	mov	r25, r3
     e12:	99 7f       	andi	r25, 0xF9	; 249
     e14:	b9 2e       	mov	r11, r25
     e16:	8f 36       	cpi	r24, 0x6F	; 111
     e18:	c1 f0       	breq	.+48     	; 0xe4a <vfprintf+0x26c>
     e1a:	18 f4       	brcc	.+6      	; 0xe22 <vfprintf+0x244>
     e1c:	88 35       	cpi	r24, 0x58	; 88
     e1e:	79 f0       	breq	.+30     	; 0xe3e <vfprintf+0x260>
     e20:	b5 c0       	rjmp	.+362    	; 0xf8c <vfprintf+0x3ae>
     e22:	80 37       	cpi	r24, 0x70	; 112
     e24:	19 f0       	breq	.+6      	; 0xe2c <vfprintf+0x24e>
     e26:	88 37       	cpi	r24, 0x78	; 120
     e28:	21 f0       	breq	.+8      	; 0xe32 <vfprintf+0x254>
     e2a:	b0 c0       	rjmp	.+352    	; 0xf8c <vfprintf+0x3ae>
     e2c:	e9 2f       	mov	r30, r25
     e2e:	e0 61       	ori	r30, 0x10	; 16
     e30:	be 2e       	mov	r11, r30
     e32:	b4 fe       	sbrs	r11, 4
     e34:	0d c0       	rjmp	.+26     	; 0xe50 <vfprintf+0x272>
     e36:	fb 2d       	mov	r31, r11
     e38:	f4 60       	ori	r31, 0x04	; 4
     e3a:	bf 2e       	mov	r11, r31
     e3c:	09 c0       	rjmp	.+18     	; 0xe50 <vfprintf+0x272>
     e3e:	34 fe       	sbrs	r3, 4
     e40:	0a c0       	rjmp	.+20     	; 0xe56 <vfprintf+0x278>
     e42:	29 2f       	mov	r18, r25
     e44:	26 60       	ori	r18, 0x06	; 6
     e46:	b2 2e       	mov	r11, r18
     e48:	06 c0       	rjmp	.+12     	; 0xe56 <vfprintf+0x278>
     e4a:	28 e0       	ldi	r18, 0x08	; 8
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	05 c0       	rjmp	.+10     	; 0xe5a <vfprintf+0x27c>
     e50:	20 e1       	ldi	r18, 0x10	; 16
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	02 c0       	rjmp	.+4      	; 0xe5a <vfprintf+0x27c>
     e56:	20 e1       	ldi	r18, 0x10	; 16
     e58:	32 e0       	ldi	r19, 0x02	; 2
     e5a:	f8 01       	movw	r30, r16
     e5c:	b7 fe       	sbrs	r11, 7
     e5e:	07 c0       	rjmp	.+14     	; 0xe6e <vfprintf+0x290>
     e60:	60 81       	ld	r22, Z
     e62:	71 81       	ldd	r23, Z+1	; 0x01
     e64:	82 81       	ldd	r24, Z+2	; 0x02
     e66:	93 81       	ldd	r25, Z+3	; 0x03
     e68:	0c 5f       	subi	r16, 0xFC	; 252
     e6a:	1f 4f       	sbci	r17, 0xFF	; 255
     e6c:	06 c0       	rjmp	.+12     	; 0xe7a <vfprintf+0x29c>
     e6e:	60 81       	ld	r22, Z
     e70:	71 81       	ldd	r23, Z+1	; 0x01
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	0e 5f       	subi	r16, 0xFE	; 254
     e78:	1f 4f       	sbci	r17, 0xFF	; 255
     e7a:	a3 01       	movw	r20, r6
     e7c:	0e 94 22 08 	call	0x1044	; 0x1044 <__ultoa_invert>
     e80:	88 2e       	mov	r8, r24
     e82:	86 18       	sub	r8, r6
     e84:	fb 2d       	mov	r31, r11
     e86:	ff 77       	andi	r31, 0x7F	; 127
     e88:	3f 2e       	mov	r3, r31
     e8a:	36 fe       	sbrs	r3, 6
     e8c:	0d c0       	rjmp	.+26     	; 0xea8 <vfprintf+0x2ca>
     e8e:	23 2d       	mov	r18, r3
     e90:	2e 7f       	andi	r18, 0xFE	; 254
     e92:	a2 2e       	mov	r10, r18
     e94:	89 14       	cp	r8, r9
     e96:	58 f4       	brcc	.+22     	; 0xeae <vfprintf+0x2d0>
     e98:	34 fe       	sbrs	r3, 4
     e9a:	0b c0       	rjmp	.+22     	; 0xeb2 <vfprintf+0x2d4>
     e9c:	32 fc       	sbrc	r3, 2
     e9e:	09 c0       	rjmp	.+18     	; 0xeb2 <vfprintf+0x2d4>
     ea0:	83 2d       	mov	r24, r3
     ea2:	8e 7e       	andi	r24, 0xEE	; 238
     ea4:	a8 2e       	mov	r10, r24
     ea6:	05 c0       	rjmp	.+10     	; 0xeb2 <vfprintf+0x2d4>
     ea8:	b8 2c       	mov	r11, r8
     eaa:	a3 2c       	mov	r10, r3
     eac:	03 c0       	rjmp	.+6      	; 0xeb4 <vfprintf+0x2d6>
     eae:	b8 2c       	mov	r11, r8
     eb0:	01 c0       	rjmp	.+2      	; 0xeb4 <vfprintf+0x2d6>
     eb2:	b9 2c       	mov	r11, r9
     eb4:	a4 fe       	sbrs	r10, 4
     eb6:	0f c0       	rjmp	.+30     	; 0xed6 <vfprintf+0x2f8>
     eb8:	fe 01       	movw	r30, r28
     eba:	e8 0d       	add	r30, r8
     ebc:	f1 1d       	adc	r31, r1
     ebe:	80 81       	ld	r24, Z
     ec0:	80 33       	cpi	r24, 0x30	; 48
     ec2:	21 f4       	brne	.+8      	; 0xecc <vfprintf+0x2ee>
     ec4:	9a 2d       	mov	r25, r10
     ec6:	99 7e       	andi	r25, 0xE9	; 233
     ec8:	a9 2e       	mov	r10, r25
     eca:	09 c0       	rjmp	.+18     	; 0xede <vfprintf+0x300>
     ecc:	a2 fe       	sbrs	r10, 2
     ece:	06 c0       	rjmp	.+12     	; 0xedc <vfprintf+0x2fe>
     ed0:	b3 94       	inc	r11
     ed2:	b3 94       	inc	r11
     ed4:	04 c0       	rjmp	.+8      	; 0xede <vfprintf+0x300>
     ed6:	8a 2d       	mov	r24, r10
     ed8:	86 78       	andi	r24, 0x86	; 134
     eda:	09 f0       	breq	.+2      	; 0xede <vfprintf+0x300>
     edc:	b3 94       	inc	r11
     ede:	a3 fc       	sbrc	r10, 3
     ee0:	11 c0       	rjmp	.+34     	; 0xf04 <vfprintf+0x326>
     ee2:	a0 fe       	sbrs	r10, 0
     ee4:	06 c0       	rjmp	.+12     	; 0xef2 <vfprintf+0x314>
     ee6:	b2 14       	cp	r11, r2
     ee8:	88 f4       	brcc	.+34     	; 0xf0c <vfprintf+0x32e>
     eea:	28 0c       	add	r2, r8
     eec:	92 2c       	mov	r9, r2
     eee:	9b 18       	sub	r9, r11
     ef0:	0e c0       	rjmp	.+28     	; 0xf0e <vfprintf+0x330>
     ef2:	b2 14       	cp	r11, r2
     ef4:	60 f4       	brcc	.+24     	; 0xf0e <vfprintf+0x330>
     ef6:	b6 01       	movw	r22, r12
     ef8:	80 e2       	ldi	r24, 0x20	; 32
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     f00:	b3 94       	inc	r11
     f02:	f7 cf       	rjmp	.-18     	; 0xef2 <vfprintf+0x314>
     f04:	b2 14       	cp	r11, r2
     f06:	18 f4       	brcc	.+6      	; 0xf0e <vfprintf+0x330>
     f08:	2b 18       	sub	r2, r11
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <vfprintf+0x332>
     f0c:	98 2c       	mov	r9, r8
     f0e:	21 2c       	mov	r2, r1
     f10:	a4 fe       	sbrs	r10, 4
     f12:	10 c0       	rjmp	.+32     	; 0xf34 <vfprintf+0x356>
     f14:	b6 01       	movw	r22, r12
     f16:	80 e3       	ldi	r24, 0x30	; 48
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     f1e:	a2 fe       	sbrs	r10, 2
     f20:	17 c0       	rjmp	.+46     	; 0xf50 <vfprintf+0x372>
     f22:	a1 fc       	sbrc	r10, 1
     f24:	03 c0       	rjmp	.+6      	; 0xf2c <vfprintf+0x34e>
     f26:	88 e7       	ldi	r24, 0x78	; 120
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	02 c0       	rjmp	.+4      	; 0xf30 <vfprintf+0x352>
     f2c:	88 e5       	ldi	r24, 0x58	; 88
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	b6 01       	movw	r22, r12
     f32:	0c c0       	rjmp	.+24     	; 0xf4c <vfprintf+0x36e>
     f34:	8a 2d       	mov	r24, r10
     f36:	86 78       	andi	r24, 0x86	; 134
     f38:	59 f0       	breq	.+22     	; 0xf50 <vfprintf+0x372>
     f3a:	a1 fe       	sbrs	r10, 1
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <vfprintf+0x364>
     f3e:	8b e2       	ldi	r24, 0x2B	; 43
     f40:	01 c0       	rjmp	.+2      	; 0xf44 <vfprintf+0x366>
     f42:	80 e2       	ldi	r24, 0x20	; 32
     f44:	a7 fc       	sbrc	r10, 7
     f46:	8d e2       	ldi	r24, 0x2D	; 45
     f48:	b6 01       	movw	r22, r12
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     f50:	89 14       	cp	r8, r9
     f52:	38 f4       	brcc	.+14     	; 0xf62 <vfprintf+0x384>
     f54:	b6 01       	movw	r22, r12
     f56:	80 e3       	ldi	r24, 0x30	; 48
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     f5e:	9a 94       	dec	r9
     f60:	f7 cf       	rjmp	.-18     	; 0xf50 <vfprintf+0x372>
     f62:	8a 94       	dec	r8
     f64:	f3 01       	movw	r30, r6
     f66:	e8 0d       	add	r30, r8
     f68:	f1 1d       	adc	r31, r1
     f6a:	80 81       	ld	r24, Z
     f6c:	b6 01       	movw	r22, r12
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     f74:	81 10       	cpse	r8, r1
     f76:	f5 cf       	rjmp	.-22     	; 0xf62 <vfprintf+0x384>
     f78:	22 20       	and	r2, r2
     f7a:	09 f4       	brne	.+2      	; 0xf7e <vfprintf+0x3a0>
     f7c:	42 ce       	rjmp	.-892    	; 0xc02 <vfprintf+0x24>
     f7e:	b6 01       	movw	r22, r12
     f80:	80 e2       	ldi	r24, 0x20	; 32
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 e6 07 	call	0xfcc	; 0xfcc <fputc>
     f88:	2a 94       	dec	r2
     f8a:	f6 cf       	rjmp	.-20     	; 0xf78 <vfprintf+0x39a>
     f8c:	f6 01       	movw	r30, r12
     f8e:	86 81       	ldd	r24, Z+6	; 0x06
     f90:	97 81       	ldd	r25, Z+7	; 0x07
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <vfprintf+0x3ba>
     f94:	8f ef       	ldi	r24, 0xFF	; 255
     f96:	9f ef       	ldi	r25, 0xFF	; 255
     f98:	2b 96       	adiw	r28, 0x0b	; 11
     f9a:	e2 e1       	ldi	r30, 0x12	; 18
     f9c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__epilogue_restores__>

00000fa0 <strnlen_P>:
     fa0:	fc 01       	movw	r30, r24
     fa2:	05 90       	lpm	r0, Z+
     fa4:	61 50       	subi	r22, 0x01	; 1
     fa6:	70 40       	sbci	r23, 0x00	; 0
     fa8:	01 10       	cpse	r0, r1
     faa:	d8 f7       	brcc	.-10     	; 0xfa2 <strnlen_P+0x2>
     fac:	80 95       	com	r24
     fae:	90 95       	com	r25
     fb0:	8e 0f       	add	r24, r30
     fb2:	9f 1f       	adc	r25, r31
     fb4:	08 95       	ret

00000fb6 <strnlen>:
     fb6:	fc 01       	movw	r30, r24
     fb8:	61 50       	subi	r22, 0x01	; 1
     fba:	70 40       	sbci	r23, 0x00	; 0
     fbc:	01 90       	ld	r0, Z+
     fbe:	01 10       	cpse	r0, r1
     fc0:	d8 f7       	brcc	.-10     	; 0xfb8 <strnlen+0x2>
     fc2:	80 95       	com	r24
     fc4:	90 95       	com	r25
     fc6:	8e 0f       	add	r24, r30
     fc8:	9f 1f       	adc	r25, r31
     fca:	08 95       	ret

00000fcc <fputc>:
     fcc:	0f 93       	push	r16
     fce:	1f 93       	push	r17
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	fb 01       	movw	r30, r22
     fd6:	23 81       	ldd	r18, Z+3	; 0x03
     fd8:	21 fd       	sbrc	r18, 1
     fda:	03 c0       	rjmp	.+6      	; 0xfe2 <fputc+0x16>
     fdc:	8f ef       	ldi	r24, 0xFF	; 255
     fde:	9f ef       	ldi	r25, 0xFF	; 255
     fe0:	2c c0       	rjmp	.+88     	; 0x103a <fputc+0x6e>
     fe2:	22 ff       	sbrs	r18, 2
     fe4:	16 c0       	rjmp	.+44     	; 0x1012 <fputc+0x46>
     fe6:	46 81       	ldd	r20, Z+6	; 0x06
     fe8:	57 81       	ldd	r21, Z+7	; 0x07
     fea:	24 81       	ldd	r18, Z+4	; 0x04
     fec:	35 81       	ldd	r19, Z+5	; 0x05
     fee:	42 17       	cp	r20, r18
     ff0:	53 07       	cpc	r21, r19
     ff2:	44 f4       	brge	.+16     	; 0x1004 <fputc+0x38>
     ff4:	a0 81       	ld	r26, Z
     ff6:	b1 81       	ldd	r27, Z+1	; 0x01
     ff8:	9d 01       	movw	r18, r26
     ffa:	2f 5f       	subi	r18, 0xFF	; 255
     ffc:	3f 4f       	sbci	r19, 0xFF	; 255
     ffe:	31 83       	std	Z+1, r19	; 0x01
    1000:	20 83       	st	Z, r18
    1002:	8c 93       	st	X, r24
    1004:	26 81       	ldd	r18, Z+6	; 0x06
    1006:	37 81       	ldd	r19, Z+7	; 0x07
    1008:	2f 5f       	subi	r18, 0xFF	; 255
    100a:	3f 4f       	sbci	r19, 0xFF	; 255
    100c:	37 83       	std	Z+7, r19	; 0x07
    100e:	26 83       	std	Z+6, r18	; 0x06
    1010:	14 c0       	rjmp	.+40     	; 0x103a <fputc+0x6e>
    1012:	8b 01       	movw	r16, r22
    1014:	ec 01       	movw	r28, r24
    1016:	fb 01       	movw	r30, r22
    1018:	00 84       	ldd	r0, Z+8	; 0x08
    101a:	f1 85       	ldd	r31, Z+9	; 0x09
    101c:	e0 2d       	mov	r30, r0
    101e:	09 95       	icall
    1020:	89 2b       	or	r24, r25
    1022:	e1 f6       	brne	.-72     	; 0xfdc <fputc+0x10>
    1024:	d8 01       	movw	r26, r16
    1026:	16 96       	adiw	r26, 0x06	; 6
    1028:	8d 91       	ld	r24, X+
    102a:	9c 91       	ld	r25, X
    102c:	17 97       	sbiw	r26, 0x07	; 7
    102e:	01 96       	adiw	r24, 0x01	; 1
    1030:	17 96       	adiw	r26, 0x07	; 7
    1032:	9c 93       	st	X, r25
    1034:	8e 93       	st	-X, r24
    1036:	16 97       	sbiw	r26, 0x06	; 6
    1038:	ce 01       	movw	r24, r28
    103a:	df 91       	pop	r29
    103c:	cf 91       	pop	r28
    103e:	1f 91       	pop	r17
    1040:	0f 91       	pop	r16
    1042:	08 95       	ret

00001044 <__ultoa_invert>:
    1044:	fa 01       	movw	r30, r20
    1046:	aa 27       	eor	r26, r26
    1048:	28 30       	cpi	r18, 0x08	; 8
    104a:	51 f1       	breq	.+84     	; 0x10a0 <__ultoa_invert+0x5c>
    104c:	20 31       	cpi	r18, 0x10	; 16
    104e:	81 f1       	breq	.+96     	; 0x10b0 <__ultoa_invert+0x6c>
    1050:	e8 94       	clt
    1052:	6f 93       	push	r22
    1054:	6e 7f       	andi	r22, 0xFE	; 254
    1056:	6e 5f       	subi	r22, 0xFE	; 254
    1058:	7f 4f       	sbci	r23, 0xFF	; 255
    105a:	8f 4f       	sbci	r24, 0xFF	; 255
    105c:	9f 4f       	sbci	r25, 0xFF	; 255
    105e:	af 4f       	sbci	r26, 0xFF	; 255
    1060:	b1 e0       	ldi	r27, 0x01	; 1
    1062:	3e d0       	rcall	.+124    	; 0x10e0 <__ultoa_invert+0x9c>
    1064:	b4 e0       	ldi	r27, 0x04	; 4
    1066:	3c d0       	rcall	.+120    	; 0x10e0 <__ultoa_invert+0x9c>
    1068:	67 0f       	add	r22, r23
    106a:	78 1f       	adc	r23, r24
    106c:	89 1f       	adc	r24, r25
    106e:	9a 1f       	adc	r25, r26
    1070:	a1 1d       	adc	r26, r1
    1072:	68 0f       	add	r22, r24
    1074:	79 1f       	adc	r23, r25
    1076:	8a 1f       	adc	r24, r26
    1078:	91 1d       	adc	r25, r1
    107a:	a1 1d       	adc	r26, r1
    107c:	6a 0f       	add	r22, r26
    107e:	71 1d       	adc	r23, r1
    1080:	81 1d       	adc	r24, r1
    1082:	91 1d       	adc	r25, r1
    1084:	a1 1d       	adc	r26, r1
    1086:	20 d0       	rcall	.+64     	; 0x10c8 <__ultoa_invert+0x84>
    1088:	09 f4       	brne	.+2      	; 0x108c <__ultoa_invert+0x48>
    108a:	68 94       	set
    108c:	3f 91       	pop	r19
    108e:	2a e0       	ldi	r18, 0x0A	; 10
    1090:	26 9f       	mul	r18, r22
    1092:	11 24       	eor	r1, r1
    1094:	30 19       	sub	r19, r0
    1096:	30 5d       	subi	r19, 0xD0	; 208
    1098:	31 93       	st	Z+, r19
    109a:	de f6       	brtc	.-74     	; 0x1052 <__ultoa_invert+0xe>
    109c:	cf 01       	movw	r24, r30
    109e:	08 95       	ret
    10a0:	46 2f       	mov	r20, r22
    10a2:	47 70       	andi	r20, 0x07	; 7
    10a4:	40 5d       	subi	r20, 0xD0	; 208
    10a6:	41 93       	st	Z+, r20
    10a8:	b3 e0       	ldi	r27, 0x03	; 3
    10aa:	0f d0       	rcall	.+30     	; 0x10ca <__ultoa_invert+0x86>
    10ac:	c9 f7       	brne	.-14     	; 0x10a0 <__ultoa_invert+0x5c>
    10ae:	f6 cf       	rjmp	.-20     	; 0x109c <__ultoa_invert+0x58>
    10b0:	46 2f       	mov	r20, r22
    10b2:	4f 70       	andi	r20, 0x0F	; 15
    10b4:	40 5d       	subi	r20, 0xD0	; 208
    10b6:	4a 33       	cpi	r20, 0x3A	; 58
    10b8:	18 f0       	brcs	.+6      	; 0x10c0 <__ultoa_invert+0x7c>
    10ba:	49 5d       	subi	r20, 0xD9	; 217
    10bc:	31 fd       	sbrc	r19, 1
    10be:	40 52       	subi	r20, 0x20	; 32
    10c0:	41 93       	st	Z+, r20
    10c2:	02 d0       	rcall	.+4      	; 0x10c8 <__ultoa_invert+0x84>
    10c4:	a9 f7       	brne	.-22     	; 0x10b0 <__ultoa_invert+0x6c>
    10c6:	ea cf       	rjmp	.-44     	; 0x109c <__ultoa_invert+0x58>
    10c8:	b4 e0       	ldi	r27, 0x04	; 4
    10ca:	a6 95       	lsr	r26
    10cc:	97 95       	ror	r25
    10ce:	87 95       	ror	r24
    10d0:	77 95       	ror	r23
    10d2:	67 95       	ror	r22
    10d4:	ba 95       	dec	r27
    10d6:	c9 f7       	brne	.-14     	; 0x10ca <__ultoa_invert+0x86>
    10d8:	00 97       	sbiw	r24, 0x00	; 0
    10da:	61 05       	cpc	r22, r1
    10dc:	71 05       	cpc	r23, r1
    10de:	08 95       	ret
    10e0:	9b 01       	movw	r18, r22
    10e2:	ac 01       	movw	r20, r24
    10e4:	0a 2e       	mov	r0, r26
    10e6:	06 94       	lsr	r0
    10e8:	57 95       	ror	r21
    10ea:	47 95       	ror	r20
    10ec:	37 95       	ror	r19
    10ee:	27 95       	ror	r18
    10f0:	ba 95       	dec	r27
    10f2:	c9 f7       	brne	.-14     	; 0x10e6 <__ultoa_invert+0xa2>
    10f4:	62 0f       	add	r22, r18
    10f6:	73 1f       	adc	r23, r19
    10f8:	84 1f       	adc	r24, r20
    10fa:	95 1f       	adc	r25, r21
    10fc:	a0 1d       	adc	r26, r0
    10fe:	08 95       	ret

00001100 <__prologue_saves__>:
    1100:	2f 92       	push	r2
    1102:	3f 92       	push	r3
    1104:	4f 92       	push	r4
    1106:	5f 92       	push	r5
    1108:	6f 92       	push	r6
    110a:	7f 92       	push	r7
    110c:	8f 92       	push	r8
    110e:	9f 92       	push	r9
    1110:	af 92       	push	r10
    1112:	bf 92       	push	r11
    1114:	cf 92       	push	r12
    1116:	df 92       	push	r13
    1118:	ef 92       	push	r14
    111a:	ff 92       	push	r15
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	cd b7       	in	r28, 0x3d	; 61
    1126:	de b7       	in	r29, 0x3e	; 62
    1128:	ca 1b       	sub	r28, r26
    112a:	db 0b       	sbc	r29, r27
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
    1136:	09 94       	ijmp

00001138 <__epilogue_restores__>:
    1138:	2a 88       	ldd	r2, Y+18	; 0x12
    113a:	39 88       	ldd	r3, Y+17	; 0x11
    113c:	48 88       	ldd	r4, Y+16	; 0x10
    113e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1140:	6e 84       	ldd	r6, Y+14	; 0x0e
    1142:	7d 84       	ldd	r7, Y+13	; 0x0d
    1144:	8c 84       	ldd	r8, Y+12	; 0x0c
    1146:	9b 84       	ldd	r9, Y+11	; 0x0b
    1148:	aa 84       	ldd	r10, Y+10	; 0x0a
    114a:	b9 84       	ldd	r11, Y+9	; 0x09
    114c:	c8 84       	ldd	r12, Y+8	; 0x08
    114e:	df 80       	ldd	r13, Y+7	; 0x07
    1150:	ee 80       	ldd	r14, Y+6	; 0x06
    1152:	fd 80       	ldd	r15, Y+5	; 0x05
    1154:	0c 81       	ldd	r16, Y+4	; 0x04
    1156:	1b 81       	ldd	r17, Y+3	; 0x03
    1158:	aa 81       	ldd	r26, Y+2	; 0x02
    115a:	b9 81       	ldd	r27, Y+1	; 0x01
    115c:	ce 0f       	add	r28, r30
    115e:	d1 1d       	adc	r29, r1
    1160:	0f b6       	in	r0, 0x3f	; 63
    1162:	f8 94       	cli
    1164:	de bf       	out	0x3e, r29	; 62
    1166:	0f be       	out	0x3f, r0	; 63
    1168:	cd bf       	out	0x3d, r28	; 61
    116a:	ed 01       	movw	r28, r26
    116c:	08 95       	ret

0000116e <_exit>:
    116e:	f8 94       	cli

00001170 <__stop_program>:
    1170:	ff cf       	rjmp	.-2      	; 0x1170 <__stop_program>
